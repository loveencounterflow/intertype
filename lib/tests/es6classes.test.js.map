{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "/home/flow/jzr/intertype/src/tests/es6classes.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\n# njs_util                  = require 'util'\nnjs_path                  = require 'path'\n# njs_fs                    = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr.bind CND\nbadge                     = 'INTERTYPE/tests/es6classes'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\npraise                    = CND.get_logger 'praise',    badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\nINTERTYPE                 = require '../..'\n{ Intertype, }            = INTERTYPE\n{ assign\n  flatten\n  js_type_of }            = require '../helpers'\n\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"es6classes type detection devices\" ] = ( T, done ) ->\n#   #.........................................................................................................\n#   intertype = new Intertype()\n#   { isa\n#     validate\n#     type_of\n#     types_of\n#     size_of\n#     declare\n#     all_keys_of } = intertype.export()\n#   #.........................................................................................................\n#   probes_and_matchers = [\n#     [[ [ 1, 2, 3, 4, ]                                 ], 4,                                          null, ]\n#     ]\n#   #.........................................................................................................\n#   for [ probe, matcher, error, ] in probes_and_matchers\n#     await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n#       resolve result\n#       return null\n#   done()\n#   return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"es6classes type detection devices (prototype)\" ] = ( T, done ) ->\n  intertype = new Intertype()\n  { isa\n    validate\n    type_of } = intertype.export()\n  { domenic_denicola_device, mark_miller_device, } = require '../helpers'\n  #.........................................................................................................\n  ### TAINT move constants to module ###\n  Generator       = ( ( -> yield 42 )() ).constructor\n  #.........................................................................................................\n  dddx_v2 = ( x ) ->\n    return 'null'       if x is null\n    return 'undefined'  if x is undefined\n    return 'infinity'   if ( x is Infinity  ) or  ( x is -Infinity  )\n    return 'boolean'    if ( x is true      ) or  ( x is false      )\n    return 'nan'        if ( Number.isNaN     x )\n    return 'buffer'     if ( Buffer.isBuffer  x )\n    #.......................................................................................................\n    if ( tagname = x[ Symbol.toStringTag ] )?\n      return 'arrayiterator'  if tagname is 'Array Iterator'\n      return 'stringiterator' if tagname is 'String Iterator'\n      return 'mapiterator'    if tagname is 'Map Iterator'\n      return 'setiterator'    if tagname is 'Set Iterator'\n      return tagname.toLowerCase()\n    #.......................................................................................................\n    ### Domenic Denicola Device, see https://stackoverflow.com/a/30560581 ###\n    return 'nullobject' if ( c = x.constructor ) is undefined\n    return 'object'     if ( typeof c ) isnt 'function'\n    if ( R = c.name.toLowerCase() ) is ''\n      return 'generator' if x.constructor is Generator\n      ### NOTE: throw error since this should never happen ###\n      return ( ( Object::toString.call x ).slice 8, -1 ).toLowerCase() ### Mark Miller Device ###\n    #.......................................................................................................\n    return 'wrapper'  if ( typeof x is 'object' ) and R in [ 'boolean', 'number', 'string', ]\n    return 'float'    if R is 'number'\n    return 'regex'    if R is 'regexp'\n    ### thx to https://stackoverflow.com/a/29094209 ###\n    ### TAINT may produce an arbitrarily long throwaway string ###\n    return 'class'    if R is 'function' and x.toString().startsWith 'class '\n    return R\n  #.........................................................................................................\n  # class Array\n  class MyBareClass\n  class MyObjectClass extends Object\n  class MyArrayClass  extends Array\n  SomeConstructor = ->\n  OtherConstructor = -> 42\n  #.........................................................................................................\n  # thx to https://www.reddit.com/r/javascript/comments/gnbqoy/askjs_is_objectprototypetostringcall_the_best/fra7fg9?utm_source=share&utm_medium=web2x\n  # toString  = Function.prototype.call.bind Object.prototype.toString\n  FooObject                       = {}\n  FooObject[ Symbol.toStringTag ] = 'Foo'\n  # console.log(toString(FooObject)) // [object Foo]\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ ( Object.create null                    ), 'nullobject',              ]\n    [ ( { constructor: 'Bob', }               ), 'object',                  ]\n    [ ( { CONSTRUCTOR: 'Bob', }               ), 'object',                  ]\n    [ ( MyBareClass                           ), 'class',                   ]\n    [ ( MyObjectClass                         ), 'class',                   ]\n    [ ( MyArrayClass                          ), 'class',                   ]\n    [ ( Array                                 ), 'function',                ]\n    [ ( SomeConstructor                       ), 'function',                ]\n    [ ( new MyBareClass()                     ), 'mybareclass',             ]\n    [ ( new MyObjectClass()                   ), 'myobjectclass',           ]\n    [ ( new MyArrayClass()                    ), 'myarrayclass',            ]\n    [ ( new SomeConstructor()                 ), 'someconstructor',         ]\n    [ ( new OtherConstructor()                ), 'otherconstructor',        ]\n    [ ( null                                  ), 'null',                    ]\n    [ ( undefined                             ), 'undefined',               ]\n    [ ( Object                                ), 'function',                ]\n    [ ( Array                                 ), 'function',                ]\n    [ ( {}                                    ), 'object',                  ]\n    [ ( []                                    ), 'array',                   ]\n    [ ( '42'                                  ), 'string',                  ]\n    [ ( 42                                    ), 'float',                   ]\n    [ ( NaN                                   ), 'nan',                     ]\n    [ ( Infinity                              ), 'infinity',                ]\n    [ ( -> await f()                          ), 'asyncfunction',           ]\n    [ ( -> yield from await f()               ), 'asyncgeneratorfunction',  ]\n    [ ( -> yield 42                           ), 'generatorfunction',       ]\n    [ ( ( -> yield 42 )()                     ), 'generator',               ]\n    [ ( /x/                                   ), 'regex',                   ]\n    [ ( new Date()                            ), 'date',                    ]\n    [ ( Set                                   ), 'function',                ]\n    [ ( new Set()                             ), 'set',                     ]\n    [ ( Symbol                                ), 'function',                ]\n    [ ( Symbol 'abc'                          ), 'symbol',                  ]\n    [ ( Symbol.for 'abc'                      ), 'symbol',                  ]\n    [ ( new Uint8Array [ 42, ]                ), 'uint8array',              ]\n    [ ( Buffer.from [ 42, ]                   ), 'buffer',                  ]\n    [ ( 12345678912345678912345n              ), 'bigint',                  ]\n    [ ( FooObject                             ), 'foo',                     ]\n    [ ( new Promise ( resolve ) ->            ), 'promise',                 ]\n    [ ( new Number 42                         ), 'wrapper',                 ]\n    [ ( new String '42'                       ), 'wrapper',                 ]\n    [ ( new Boolean true                      ), 'wrapper',                 ]\n    [ ( new RegExp 'x*'                       ), 'regex',                   ] ### NOTE not functionally different ###\n    [ ( new Function 'a', 'b', 'return a + b' ), 'function',                ] ### NOTE not functionally different ###\n    [ ( [].keys()                             ), 'arrayiterator',           ]\n    [ ( ( new Set [] ).keys()                 ), 'setiterator',             ]\n    [ ( ( new Map [] ).keys()                 ), 'mapiterator',             ]\n    [ ( new Array()                           ), 'array',                   ]\n    [ ( ( 'x' )[ Symbol.iterator ]()          ), 'stringiterator',          ]\n    ]\n  #.........................................................................................................\n  debug()\n  column_width  = 25\n  #.........................................................................................................\n  headers = [\n    'probe'\n    'typeof'\n    # 'toString()'\n    'string_tag'\n    'miller'\n    'old type_of'\n    'denicola'\n    'dddx_v2'\n    'expected' ]\n  headers = ( h[ ... column_width ].padEnd column_width for h in headers ).join '|'\n  echo headers\n  #.........................................................................................................\n  for [ probe, matcher, ] in probes_and_matchers\n    dddx_v2_type  = dddx_v2 probe\n    string_tag    = if probe? then probe[ Symbol.toStringTag ]  else './.'\n    # toString      = if probe? then probe.toString?() ? './.'    else './.'\n    raw_results   = [\n      rpr                     probe\n      typeof                  probe\n      # toString\n      string_tag\n      mark_miller_device      probe\n      type_of                 probe\n      domenic_denicola_device probe\n      dddx_v2_type\n      matcher ]\n    results   = []\n    last_idx  = raw_results.length - 1\n    for raw_result, idx in raw_results\n      if isa.text raw_result\n        raw_result  = raw_result.replace /\\n/g, '⏎'\n        lc_result   = raw_result.toLowerCase().replace /\\s/g, ''\n      else\n        raw_result  = ''\n        lc_result   = null\n      if ( idx in [ 0, last_idx, ] )\n        color   = CND.cyan\n      else\n        if      raw_result                is matcher then color = CND.green\n        else if lc_result                 is matcher then color = CND.lime\n        else                                              color = CND.red\n      results.push color ( raw_result[ ... column_width ].padEnd column_width )\n    echo results.join '|'\n    T.eq dddx_v2_type, matcher\n  # debug rpr ( ( -> yield 42 )()       ).constructor\n  # debug rpr ( ( -> yield 42 )()       ).constructor.name\n  # debug '^338-10^', mmd MyBareClass           # Function\n  # debug '^338-11^', mmd MyObjectClass         # Function\n  # debug '^338-12^', mmd MyArrayClass          # Function\n  # debug '^338-13^', mmd new MyBareClass()     # Object\n  # debug '^338-14^', mmd new MyObjectClass()   # Object\n  # debug '^338-15^', mmd new MyArrayClass()    # Array\n  # debug()                                     #\n  # debug '^338-16^', ddd MyBareClass           # Function\n  # debug '^338-17^', ddd MyObjectClass         # Function\n  # debug '^338-18^', ddd MyArrayClass          # Function\n  # debug '^338-19^', ddd new MyBareClass()     # MyBareClass\n  # debug '^338-20^', ddd new MyObjectClass()   # MyObjectClass\n  # debug '^338-21^', ddd new MyArrayClass()    # MyArrayClass\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"_es6classes equals\" ] = ( T, done ) ->\n  intertype = new Intertype()\n  { isa\n    check\n    equals } = intertype.export()\n  ### TAINT copy more extensive tests from CND, `js_eq`? ###\n  T.eq ( equals 3, 3 ), true\n  T.eq ( equals 3, 4 ), false\n  done() if done?\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_test_for_generator = ->\n  GeneratorFunction = ( -> yield 42                   ).constructor\n  Generator         = ( ( -> yield 42 )()             ).constructor\n  debug rpr GeneratorFunction.name  == 'GeneratorFunction'\n  debug rpr Generator.name          == ''\n  debug ( -> yield 42                   ).constructor is GeneratorFunction\n  debug ( -> yield 42                   ).constructor is Generator\n  debug ( ( -> yield 42 )()             ).constructor is GeneratorFunction\n  debug ( ( -> yield 42 )()             ).constructor is Generator\n\n############################################################################################################\nif module is require.main then do =>\n  # demo_test_for_generator()\n  test @\n\n\n  # ```\n  # echo( 'helo' );\n  # echo( rpr(\n  #   ( function*() { yield 42; } ).constructor.name\n  #   ) );\n  # echo( rpr(\n  #   ( function*() { yield 42; } )().constructor.name\n  #   ) );\n  # ```\n\n# node -p \"require('util').inspect( ( function*() { yield 42; } ).constructor )\"\n# node -p \"require('util').inspect( ( function*() { yield 42; } ).constructor.name )\"\n# node -p \"require('util').inspect( ( function*() { yield 42; } )().constructor )\"\n# node -p \"require('util').inspect( ( function*() { yield 42; } )().constructor.name )\"\n\n  info rpr ( -> yield 42; ).constructor\n  info rpr ( -> yield 42; ).constructor.name\n  info rpr ( -> yield 42; )().constructor\n  info rpr ( -> yield 42; )().constructor.name\n  # info rpr NaN.constructor.name\n\n  info arrayiterator  = [].keys().constructor\n  info setiterator    = ( new Set [] ).keys().constructor\n  info mapiterator    = ( new Map [] ).keys().constructor\n  info stringiterator = ( 'x' )[ Symbol.iterator ]().constructor\n  types = new Intertype()\n  # debug types.all_keys_of Buffer.alloc 10\n  # debug types.all_keys_of new Uint8Array 10\n\n  # class X extends NaN\n  # class X extends null\n  # class X extends undefined\n  # class X extends 1\n  # class X extends {}\n  myfunction = ->\n  class X\n  class O extends Object\n\n  info '^87-1^', rpr ( myfunction:: )\n  info '^87-2^', rpr ( myfunction:: ).constructor\n  info '^87-3^', rpr ( myfunction:: ).constructor.name\n  info '^87-4^', rpr ( X:: )\n  info '^87-5^', rpr ( X:: ).constructor\n  info '^87-6^', rpr ( X:: ).constructor.name\n  info '^87-7^', rpr ( O:: )\n  info '^87-8^', rpr ( O:: ).constructor\n  info '^87-9^', rpr ( O:: ).constructor.name\n  info Object.hasOwnProperty X, 'arguments'\n  info Object.hasOwnProperty ( -> ), 'arguments'\n  info Object.hasOwnProperty ( ( x ) -> ), 'arguments'\n  info Object.hasOwnProperty ( ( -> ):: ), 'arguments'\n  info Object.hasOwnProperty ( ( ( x ) -> ):: ), 'arguments'\n  urge Object.getOwnPropertyNames X\n  urge Object.getOwnPropertyNames ( -> )\n\n\n"
  ]
}