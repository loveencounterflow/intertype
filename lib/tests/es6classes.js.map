{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "/home/flow/jzr/intertype/src/tests/es6classes.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\n# njs_util                  = require 'util'\nnjs_path                  = require 'path'\n# njs_fs                    = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr.bind CND\nbadge                     = 'INTERTYPE/tests/es6classes'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\npraise                    = CND.get_logger 'praise',    badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\nINTERTYPE                 = require '../..'\n{ Intertype, }            = INTERTYPE\n{ assign\n  flatten\n  js_type_of }            = require '../helpers'\n\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"es6classes type detection devices\" ] = ( T, done ) ->\n#   #.........................................................................................................\n#   intertype = new Intertype()\n#   { isa\n#     validate\n#     type_of\n#     types_of\n#     size_of\n#     declare\n#     all_keys_of } = intertype.export()\n#   #.........................................................................................................\n#   probes_and_matchers = [\n#     [[ [ 1, 2, 3, 4, ]                                 ], 4,                                          null, ]\n#     ]\n#   #.........................................................................................................\n#   for [ probe, matcher, error, ] in probes_and_matchers\n#     await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n#       resolve result\n#       return null\n#   done()\n#   return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"es6classes type detection devices\" ] = ( T, done ) ->\n  intertype = new Intertype()\n  { isa\n    validate\n    type_of } = intertype.export()\n  { domenic_denicola_device, mark_miller_device, } = require '../helpers'\n  #.........................................................................................................\n  dddx = ( x ) ->\n    return 'null'       if x is null\n    return 'undefined'  if x is undefined\n    return 'infinity'   if ( x is Infinity  ) or  ( x is -Infinity  )\n    return 'boolean'    if ( x is true      ) or  ( x is false      )\n    return 'nan'        if ( Number.isNaN x )\n    #.......................................................................................................\n    # https://stackoverflow.com/questions/3905144/how-to-retrieve-the-constructors-name-in-javascript#3905265\n    dd_name = x.constructor.name                      # Domenic Denicola Device\n    mm_name = ( Object::toString.call x ).slice 8, -1 # Mark Miller Device\n    return 'buffer' if ( dd_name is 'Buffer' ) and ( mm_name is 'Uint8Array' )\n    dd_name = mm_name if ( not dd_name ) or ( dd_name is '' )\n    return dd_name if dd_name isnt mm_name\n    dd_name = dd_name.toLowerCase()\n    #.......................................................................................................\n    if      ( dd_name is 'regexp' ) then return 'regex'\n    else if ( dd_name is 'array'  ) then return 'list'\n    return dd_name\n  #.........................................................................................................\n  class MyBareClass\n  class MyObjectClass extends Object\n  class MyArrayClass  extends Array\n  SomeConstructor = ->\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ ( MyBareClass             ), 'function',              ] ### TAINT should ES6 classes get own type? ###\n    [ ( MyObjectClass           ), 'function',              ] ### TAINT should ES6 classes get own type? ###\n    [ ( MyArrayClass            ), 'function',              ] ### TAINT should ES6 classes get own type? ###\n    [ ( SomeConstructor         ), 'function',              ]\n    [ ( new MyBareClass()       ), 'MyBareClass',           ]\n    [ ( new MyObjectClass()     ), 'MyObjectClass',         ]\n    [ ( new MyArrayClass()      ), 'MyArrayClass',          ]\n    [ ( new SomeConstructor()   ), 'SomeConstructor',       ]\n    [ ( null                    ), 'null',                  ]\n    [ ( undefined               ), 'undefined',             ]\n    [ ( Object                  ), 'function',              ]\n    [ ( Array                   ), 'function',              ]\n    [ ( {}                      ), 'object',                ]\n    [ ( []                      ), 'list',                  ]\n    [ ( 42                      ), 'number',                ]\n    [ ( NaN                     ), 'nan',                   ]\n    [ ( Infinity                ), 'infinity',              ]\n    [ ( -> await f()            ), 'asyncfunction',         ]\n    [ ( -> yield 42             ), 'generatorfunction',     ]\n    [ ( ( -> yield 42 )()       ), 'generator',             ]\n    [ ( /x/                     ), 'regex',                 ]\n    [ ( new Date()              ), 'date',                  ]\n    [ ( Set                     ), 'function',              ]\n    [ ( new Set()               ), 'set',                   ]\n    [ ( Symbol                  ), 'function',              ]\n    [ ( Symbol 'abc'            ), 'symbol',                ]\n    [ ( Symbol.for 'abc'        ), 'symbol',                ]\n    [ ( new Uint8Array [ 42, ]  ), 'uint8array',            ]\n    [ ( Buffer.from [ 42, ]     ), 'buffer',                ]\n    ]\n  #.........................................................................................................\n  debug()\n  column_width  = 17\n  for [ probe, matcher, ] in probes_and_matchers\n    raw_results = [\n      ( rpr probe )[ ... column_width ]\n      mark_miller_device      probe\n      ( mark_miller_device      probe ).toLowerCase()\n      type_of                 probe\n      domenic_denicola_device probe\n      ( domenic_denicola_device probe ).toLowerCase()\n      dddx                    probe\n      matcher\n      ]\n    results   = []\n    last_idx  = raw_results.length - 1\n    for raw_result, idx in raw_results\n      if ( idx in [ 0, last_idx, ] )\n        color   = CND.cyan\n      else\n        if raw_result is matcher then color = CND.green\n        else                          color = CND.red\n      results.push color ( raw_result.padEnd column_width )\n    echo results.join ' | '\n  debug rpr ( ( -> yield 42 )()       ).constructor\n  debug rpr ( ( -> yield 42 )()       ).constructor.name\n  # debug '^338-10^', mmd MyBareClass           # Function\n  # debug '^338-11^', mmd MyObjectClass         # Function\n  # debug '^338-12^', mmd MyArrayClass          # Function\n  # debug '^338-13^', mmd new MyBareClass()     # Object\n  # debug '^338-14^', mmd new MyObjectClass()   # Object\n  # debug '^338-15^', mmd new MyArrayClass()    # Array\n  # debug()                                     #\n  # debug '^338-16^', ddd MyBareClass           # Function\n  # debug '^338-17^', ddd MyObjectClass         # Function\n  # debug '^338-18^', ddd MyArrayClass          # Function\n  # debug '^338-19^', ddd new MyBareClass()     # MyBareClass\n  # debug '^338-20^', ddd new MyObjectClass()   # MyObjectClass\n  # debug '^338-21^', ddd new MyArrayClass()    # MyArrayClass\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"_es6classes equals\" ] = ( T, done ) ->\n  intertype = new Intertype()\n  { isa\n    check\n    equals } = intertype.export()\n  ### TAINT copy more extensive tests from CND, `js_eq`? ###\n  T.eq ( equals 3, 3 ), true\n  T.eq ( equals 3, 4 ), false\n  done() if done?\n\n\n############################################################################################################\nunless module.parent?\n  # test @\n  test @[ \"es6classes type detection devices\" ]\n\n\n\n\n"
  ]
}