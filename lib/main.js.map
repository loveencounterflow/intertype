{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\n# njs_util                  = require 'util'\nnjs_path                  = require 'path'\n# njs_fs                    = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr.bind CND\nbadge                     = 'INTERTYPE/main'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\npraise                    = CND.get_logger 'praise',    badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nGUY                       = require 'guy'\nE                         = require './errors'\nH                         = require './helpers'\nITYP                      = @\n\n\n#===========================================================================================================\nclass Intertype_abc extends GUY.props.Strict_owner\n\n  # #---------------------------------------------------------------------------------------------------------\n  # constructor: ->\n  #   super()\n  #   return undefined\n\n#===========================================================================================================\nclass Empty     extends Intertype_abc\nclass Nonempty  extends Intertype_abc\nclass List_of   extends Intertype_abc\nclass Defaults  extends Intertype_abc\n\n#===========================================================================================================\nclass Isa_list_of extends Intertype_abc\n\n#===========================================================================================================\nclass Validate_list_of extends Intertype_abc\n\n#===========================================================================================================\nclass Isa_empty extends Intertype_abc\n  list_of:    new Isa_list_of()\n\n#===========================================================================================================\nclass Validate_empty extends Intertype_abc\n  list_of:    new Validate_list_of()\n\n#===========================================================================================================\nclass Isa_nonempty extends Intertype_abc\n  list_of:    new Isa_list_of()\n\n#===========================================================================================================\nclass Validate_nonempty extends Intertype_abc\n  list_of:    new Validate_list_of()\n\n#===========================================================================================================\nclass Isa_optional extends Intertype_abc\n  empty:      new Isa_empty()\n  nonempty:   new Isa_nonempty()\n  list_of:    new Isa_list_of()\n\n#===========================================================================================================\nclass Validate_optional extends Intertype_abc\n  empty:      new Validate_empty()\n  nonempty:   new Validate_nonempty()\n  list_of:    new Validate_list_of()\n\n\n#===========================================================================================================\nclass Isa extends Intertype_abc\n  optional:   new Isa_optional()\n  empty:      new Isa_empty()\n  nonempty:   new Isa_nonempty()\n  list_of:    new Isa_list_of()\n\n#===========================================================================================================\nclass Validate extends Intertype_abc\n  optional:   new Validate_optional()\n  empty:      new Validate_empty()\n  nonempty:   new Validate_nonempty()\n  list_of:    new Validate_list_of()\n\n\n#===========================================================================================================\nclass @Type_cfg extends Intertype_abc\n\n  #---------------------------------------------------------------------------------------------------------\n  @defaults: GUY.lft.freeze\n    #.......................................................................................................\n    constructor_cfg:\n      isa_numeric:      false\n      isa_collection:   false\n      size:             null  # defaults to `'length'` where `isa_collection` is `true`\n      test:             null\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    ### TAINT ensure type_cfg does not contain `type`, `name` ###\n    super()\n    cfg         = { @constructor.defaults.constructor_cfg..., cfg..., }\n    cfg.size    = 'length' if cfg.isa_collection and not cfg.size?\n    cfg.size   ?= null\n    @[ k ]      = v for k, v of cfg\n    return GUY.lft.freeze @\n\n#===========================================================================================================\nclass @Intertype extends Intertype_abc\n\n  #---------------------------------------------------------------------------------------------------------\n  ### TAINT tack onto prototype as hidden ###\n  _hedges: GUY.lft.freeze [\n    { x: [ 'optional',                                          ], match: { all: true,                }, }\n    # { x: [ 'empty', 'nonempty',                                 ], match: { isa_collection: true,     }, }\n    { x: [ [ 'empty', 'nonempty', ], [ 'list_of', 'set_of', ]   ], match: { all: true,                }, }\n    { x: [ 'empty', 'nonempty',                                 ], match: { isa_collection: true,     }, }\n    { x: [ 'positive0', 'positive1', 'negative0', 'negative1',  ], match: { isa_numeric: true,        }, }\n    ]\n\n  #---------------------------------------------------------------------------------------------------------\n  ### TAINT tack onto prototype as hidden ###\n  _signals: GUY.lft.freeze new GUY.props.Strict_owner target:\n    true_and_break:         Symbol 'true_and_break'\n    false_and_break:        Symbol 'false_and_break'\n    process_list_elements:  Symbol 'process_list_elements'\n    processd_set_elements:  Symbol 'processd_set_elements'\n\n  #---------------------------------------------------------------------------------------------------------\n  ### TAINT tack onto prototype as hidden ###\n  _hedgemethods: GUY.lft.freeze new GUY.props.Strict_owner target:\n    optional:   ( x ) ->\n      return @_signals.true_and_break unless x?\n      return true\n    #.......................................................................................................\n    ### TAINT use `length` or `size` or custom method ###\n    empty:      ( x ) -> return ( @_size_of x ) is 0\n    nonempty:   ( x ) -> return ( @_size_of x ) isnt 0\n    #.......................................................................................................\n    ### TAINT this is wrong, must test ensuing arguments against each element in collection ###\n    list_of:    ( x ) ->\n      return @_signals.false_and_break unless Array.isArray x\n      return @_signals.process_list_elements\n    set_of:     ( x ) ->\n      return @_signals.false_and_break unless x instanceof Set\n      return @_signals.processd_set_elements\n    #.......................................................................................................\n    positive0:  ( x ) -> x >= 0\n    positive1:  ( x ) -> x >  0\n    negative0:  ( x ) -> x <= 0\n    negative1:  ( x ) -> x <  0\n\n  #---------------------------------------------------------------------------------------------------------\n  @defaults: GUY.lft.freeze\n    #.......................................................................................................\n    constructor_cfg:\n      sep:  '$'\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    super()\n    # @defaults           = new Defaults()\n    # @isa                = new Isa()\n    # @validate           = new Validate()\n    @cfg      = { @constructor.defaults.constructor_cfg..., cfg..., }\n    @_types   = {}\n    #.......................................................................................................\n    @isa = new GUY.props.Strict_owner target: ( hedges..., type, x ) =>\n      ### TAINT code duplication ###\n      hedges.push type\n      name = ( hedges.join @cfg.sep )\n      # throw new Error '^534-1^' if hedges.length isnt 1\n      unless ( test = @_types[ name ]?.test )?\n        throw new E.Intertype_ETEMPTBD '^intertype@2^', \"no such type #{rpr hedges}\"\n      return test x\n    #.......................................................................................................\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _match_hedge_and_type: ( hedge, type_cfg ) ->\n    for property, value of hedge.match\n      return true if property is 'all'\n      return false unless type_cfg[ property ]\n    return true\n\n  #---------------------------------------------------------------------------------------------------------\n  _walk_hedgepaths: ( type_cfg, hedge_idx = 0, current_path = [] ) ->\n    ### thx to https://itecnote.com/tecnote/java-generate-all-combinations-from-multiple-lists/ ###\n    if hedge_idx is @_hedges.length\n      yield current_path\n      return null\n    hedge = @_hedges[ hedge_idx ]\n    yield from @_walk_hedgepaths type_cfg, hedge_idx + 1, current_path\n    return null unless @_match_hedge_and_type hedge, type_cfg\n    if Array.isArray hedge.x[ 0 ]\n      unless hedge.x.length is 2\n        throw new E.Intertype_ETEMPTBD '^intertype@1^', \\\n          \"expected hedge declaration to have exactly two sublists, got #{rpr hedge}\"\n      for term in hedge.x[ 1 ]\n        next_path = [ current_path..., term, ]\n        yield from @_walk_hedgepaths type_cfg, hedge_idx + 1, next_path\n      for term1 in hedge.x[ 0 ]\n        next_path_base = [ current_path..., term1 ]\n        for term in hedge.x[ 1 ]\n          next_path = [ next_path_base..., term, ]\n          yield from @_walk_hedgepaths type_cfg, hedge_idx + 1, next_path\n    else\n      for term, term_idx in hedge.x\n        next_path = [ current_path..., term, ]\n        yield from @_walk_hedgepaths type_cfg, hedge_idx + 1, next_path\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  declare: ( type, type_cfg ) =>\n    ### TAINT code duplication ###\n    ### TAINT find better name for `name` ###\n    type_cfg  = new ITYP.Type_cfg type_cfg\n    for hedgepath from @_walk_hedgepaths type_cfg\n      name            = [ hedgepath..., type, ].join @cfg.sep\n      ### TAINT must include test for hedges ###\n      test            = type_cfg.test.bind @\n      @_types[ name ] = { type_cfg..., name, type, test, }\n      @_declare_hedgepath { method: @isa, test, type, type_cfg, name, hedgepath, }\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  _protocol_isa: ( term, result, verdict ) ->\n    debug '^_protocol_isa@1^', { term, result, verdict, }\n    return verdict\n\n  #---------------------------------------------------------------------------------------------------------\n  _declare_hedgepath: ({ method, test, type, type_cfg, name, hedgepath, }) =>\n    typetest      = test\n    parent        = method\n    hedgemethods  = []\n    parent        = do =>\n      for term in hedgepath\n        hedgemethods.push [ term, @_hedgemethods[ term ], ]\n        unless parent.has term\n          ### TAINT consider to make functions out of these (re-use `method`?) ###\n          GUY.props.hide parent, term, new GUY.props.Strict_owner()\n        parent = parent[ term ]\n      return parent\n    #.......................................................................................................\n    unless parent.has type\n      #.....................................................................................................\n      test = ( x ) =>\n        for [ term, hedgemethod, ], hedge_idx in hedgemethods\n          # debug '^_declare_hedgepath.test@1^', { term, R: ( hedgemethod.call @, x ), }\n          switch R = hedgemethod.call @, x\n            when @_signals.true_and_break   then return @_protocol_isa term, R, true\n            when @_signals.false_and_break  then return @_protocol_isa term, R, false\n            when false                      then return @_protocol_isa term, R, false\n            when true                       then        @_protocol_isa term, R, true\n            when @_signals.process_list_elements\n              tail = ( hedgemethods[ idx ][ 1 ] for idx in [ hedge_idx + 1 ... hedgemethods.length ] )\n              tail.push type\n              debug '^4534^', tail\n              for e in x\n                return @_protocol_isa term, R, false unless @isa tail..., e\n              return @_protocol_isa term, R, true\n            else throw new E.Intertype_internal_error '^intertype@1^', \\\n              \"unexpected return value from hedgemethod for term #{rpr term}: #{rpr R}\"\n        return @_protocol_isa type, null, typetest.call @, x\n      #.....................................................................................................\n      GUY.props.hide parent, type, test\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  _size_of:     ( x ) ->\n    ### TAINT this will break with `Strict_owner` instances ###\n    return R if ( R = x.length )?\n    return R if ( R = x.size )?\n    return ( Object.keys x ).length\n\n  # #---------------------------------------------------------------------------------------------------------\n  # _is_empty:    ( type_cfg, x ) -> ( @_size_of type_cfg, x ) is 0\n  # _is_nonempty: ( type_cfg, x ) -> ( @_size_of type_cfg, x ) > 0\n\n  #---------------------------------------------------------------------------------------------------------\n  js_type_of:                 ( x ) => ( ( Object::toString.call x ).slice 8, -1 ).toLowerCase().replace /\\s+/g, ''\n  _normalize_type:            ( type ) -> type.toLowerCase().replace /\\s+/g, ''\n  _constructor_of_generators: ( ( -> yield 42 )() ).constructor\n\n  #---------------------------------------------------------------------------------------------------------\n  type_of: ( x ) ->\n    throw new Error \"^7746^ expected 1 argument, got #{arity}\" unless ( arity = arguments.length ) is 1\n    return 'null'       if x is null\n    return 'undefined'  if x is undefined\n    return 'infinity'   if ( x is Infinity  ) or  ( x is -Infinity  )\n    return 'boolean'    if ( x is true      ) or  ( x is false      )\n    return 'nan'        if ( Number.isNaN     x )\n    return 'float'      if ( Number.isFinite  x )\n    return 'buffer'     if ( Buffer.isBuffer  x )\n    return 'list'       if ( Array.isArray  x )\n    #.........................................................................................................\n    ### TAINT Not needed (?) b/c `@js_type_of x` does work with these values, too ###\n    ### this catches `Array Iterator`, `String Iterator`, `Map Iterator`, `Set Iterator`: ###\n    if ( tagname = x[ Symbol.toStringTag ] )? and ( typeof tagname ) is 'string'\n      return @_normalize_type tagname\n    #.........................................................................................................\n    ### Domenic Denicola Device, see https://stackoverflow.com/a/30560581 ###\n    return 'nullobject' if ( c = x.constructor ) is undefined\n    return 'object'     if ( typeof c ) isnt 'function'\n    if ( R = c.name.toLowerCase() ) is ''\n      return 'generator' if x.constructor is @_constructor_of_generators\n      ### NOTE: throw error since this should never happen ###\n      return ( ( Object::toString.call x ).slice 8, -1 ).toLowerCase() ### Mark Miller Device ###\n    #.........................................................................................................\n    return 'wrapper'  if ( typeof x is 'object' ) and R in [ 'boolean', 'number', 'string', ]\n    return 'regex'    if R is 'regexp'\n    return 'text'     if R is 'string'\n    ### thx to https://stackoverflow.com/a/29094209 ###\n    ### TAINT may produce an arbitrarily long throwaway string ###\n    return 'class'    if R is 'function' and x.toString().startsWith 'class '\n    return R\n\n\n\n#===========================================================================================================\nx = new @Intertype()\n# urge x.foo = 42\n# urge x.foo\n# urge x.has\n# urge x.has.foo\n# urge x.has.bar\ntry urge x.bar catch error then warn CND.reverse error.message\n\njs_type_of               = ( x ) => ( ( Object::toString.call x ).slice 8, -1 ).toLowerCase().replace /\\s+/g, ''\nlength_of = ( x ) ->\n  throw new Error \"^1^\" unless x?\n  return x.length if Object.hasOwnProperty x, length\n  return x.size   if Object.hasOwnProperty x, size\n  return ( Object.keys x ).length if ( js_type_of x ) is 'object'\n  throw new Error \"^2^\"\nnonempty  = ( x ) -> ( length_of x ) > 0\nempty     = ( x ) -> ( length_of x ) == 0\nlist_of   = ( type, x ) ->\n  return false unless ( js_type_of x ) is 'array'\n  return true if x.length is 0\n  # return x.every ( e ) -> isa type, e\n  return x.every ( e ) -> ( js_type_of e ) is type ### TAINT should use `isa` ###\n\n###\n\ntypes.isa.integer                                           42\ntypes.isa.even.integer                                      -42\ntypes.isa.odd.integer                                       41\ntypes.isa.negative1.integer                                 -42\ntypes.isa.negative0.integer                                 0\ntypes.isa.positive1.integer                                 42\ntypes.isa.positive0.integer                                 0\ntypes.isa.list_of.integer                                   [ 42, ]\ntypes.isa.nonempty.list_of.negative1.integer                [ -42, ]\ntypes.isa.nonempty.list_of.negative0.integer                [ 0, ]\ntypes.isa.nonempty.list_of.positive1.integer                [ 42, ]\ntypes.isa.nonempty.list_of.positive0.integer                [ 0, ]\ntypes.isa.empty.list_of.integer                             []\ntypes.isa.nonempty.list_of.integer                          [ 42, ]\ntypes.isa.optional.integer                                  42\ntypes.isa.optional.list_of.integer                          [ 42, ]\ntypes.isa.optional.empty.list_of.integer                    []\ntypes.isa.optional.nonempty.list_of.integer                 [ 42, ]\ntypes.isa.optional.negative1.integer                        -42\ntypes.isa.optional.negative0.integer                        0\ntypes.isa.optional.positive1.integer                        42\ntypes.isa.optional.positive0.integer                        0\ntypes.isa.optional.nonempty.list_of.negative1.integer       [ -42, ]\ntypes.isa.optional.nonempty.list_of.negative0.integer       [ 0, ]\ntypes.isa.optional.nonempty.list_of.positive1.integer       [ 42, ]\ntypes.isa.optional.nonempty.list_of.positive0.integer       [ 0, ]\ntypes.isa.optional.empty.list_of.negative1.integer          -42\ntypes.isa.optional.empty.list_of.negative0.integer          0\ntypes.isa.optional.empty.list_of.positive1.integer          42\ntypes.isa.optional.empty.list_of.positive0.integer          0\n\n[all]     [all]     [isa_collection]  [isa_collection]  [isa_numeric]   [isa_numeric]   [mandatory]\n————————————————————————————————————————————————————————————————————————————————————————————————————\nisa       optional  empty             list_of           even            negative0       <type>\nvalidate            nonempty                            odd             negative1\n                                                                        positive0\n                                                                        positive1\n###\n\n\n\n"
  ]
}