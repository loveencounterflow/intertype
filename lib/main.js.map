{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\n# njs_util                  = require 'util'\nnjs_path                  = require 'path'\n# njs_fs                    = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr.bind CND\nbadge                     = 'INTERTYPE/main'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\npraise                    = CND.get_logger 'praise',    badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nGUY                       = require 'guy'\nE                         = require './errors'\nH                         = require './helpers'\nHEDGES                    = require './hedges'\nITYP                      = @\ntypes                     = new ( require 'intertype' ).Intertype()\n@defaults                 = {}\n\n#===========================================================================================================\nclass Intertype_abc extends GUY.props.Strict_owner\n\n  # #---------------------------------------------------------------------------------------------------------\n  # constructor: ->\n  #   super()\n  #   return undefined\n\n#===========================================================================================================\nclass Empty     extends Intertype_abc\nclass Nonempty  extends Intertype_abc\nclass List_of   extends Intertype_abc\nclass Defaults  extends Intertype_abc\n\n#===========================================================================================================\nclass Isa_list_of extends Intertype_abc\n\n#===========================================================================================================\nclass Validate_list_of extends Intertype_abc\n\n#===========================================================================================================\nclass Isa_empty extends Intertype_abc\n  list_of:    new Isa_list_of()\n\n#===========================================================================================================\nclass Validate_empty extends Intertype_abc\n  list_of:    new Validate_list_of()\n\n#===========================================================================================================\nclass Isa_nonempty extends Intertype_abc\n  list_of:    new Isa_list_of()\n\n#===========================================================================================================\nclass Validate_nonempty extends Intertype_abc\n  list_of:    new Validate_list_of()\n\n#===========================================================================================================\nclass Isa_optional extends Intertype_abc\n  empty:      new Isa_empty()\n  nonempty:   new Isa_nonempty()\n  list_of:    new Isa_list_of()\n\n#===========================================================================================================\nclass Validate_optional extends Intertype_abc\n  empty:      new Validate_empty()\n  nonempty:   new Validate_nonempty()\n  list_of:    new Validate_list_of()\n\n\n#===========================================================================================================\nclass Isa extends Intertype_abc\n  optional:   new Isa_optional()\n  empty:      new Isa_empty()\n  nonempty:   new Isa_nonempty()\n  list_of:    new Isa_list_of()\n\n#===========================================================================================================\nclass Validate extends Intertype_abc\n  optional:   new Validate_optional()\n  empty:      new Validate_empty()\n  nonempty:   new Validate_nonempty()\n  list_of:    new Validate_list_of()\n\n\n#-----------------------------------------------------------------------------------------------------------\ntypes.declare 'Type_cfg_constructor_cfg', tests:\n  \"@isa.object x\":                      ( x ) -> @isa.object x\n  \"@isa_optional.nonempty_text x.size\": ( x ) -> @isa_optional.nonempty_text x.size\n  \"@isa.function x.test\":               ( x ) -> @isa.function x.test\n  \"x.groups is a nonempty text or a nonempty list of nonempty texts\": ( x ) ->\n    return true if @isa.nonempty_text x.groups\n    return false unless @isa.list x.groups\n    return x.groups.every ( e ) => ( @isa.nonempty_text e ) and not ( /[\\s,]/ ).test e\n#...........................................................................................................\n@defaults.Type_cfg_constructor_cfg =\n  groups:           'other'\n  size:             null  # defaults to `'length'` where `isa_collection` is `true`\n  test:             null\n\n#===========================================================================================================\nclass @Type_cfg extends Intertype_abc\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( hub, cfg ) ->\n    ### TAINT ensure type_cfg does not contain `type`, `name` ###\n    super()\n    GUY.props.hide @, 'hub', hub\n    cfg         = { ITYP.defaults.Type_cfg_constructor_cfg..., cfg..., }\n    cfg.groups  = @_compile_groups cfg.groups\n    types.validate.Type_cfg_constructor_cfg cfg\n    ### TAINT implement bootstrapping strategy for cfg validation ###\n    cfg.size    = 'length' if cfg.isa_collection and not cfg.size?\n    cfg.size   ?= null\n    @[ k ]      = v for k, v of cfg\n    return GUY.lft.freeze @\n\n  #---------------------------------------------------------------------------------------------------------\n  _compile_groups: ( groups ) ->\n    R = if ( types.isa.text groups ) then groups.split /\\s*,\\s*/ else groups\n    for group in R\n      continue if @hub._hedges.hedgepaths.has group\n      throw new E.Intertype_ETEMPTBD '^intertype/Type_cfg^', \"unknown hedge group #{rpr group}\"\n    return R\n\n\n#===========================================================================================================\nclass @Intertype extends Intertype_abc\n\n  #---------------------------------------------------------------------------------------------------------\n  @defaults: GUY.lft.freeze\n    #.......................................................................................................\n    constructor_cfg:\n      sep:  '$'\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    super()\n    # @defaults           = new Defaults()\n    # @isa                = new Isa()\n    # @validate           = new Validate()\n    @cfg      = { @constructor.defaults.constructor_cfg..., cfg..., }\n    GUY.props.hide @, '_types', {}\n    GUY.props.hide @, '_hedges', new HEDGES.Intertype_hedge_combinator()\n    #.......................................................................................................\n    @isa = new GUY.props.Strict_owner target: ( hedges..., type, x ) =>\n      ### TAINT code duplication ###\n      hedges.push type\n      name = ( hedges.join @cfg.sep )\n      warn '^isa@678^', hedges\n      # throw new Error '^534-1^' if hedges.length isnt 1\n      unless ( test = @_types[ name ]?.test )?\n        throw new E.Intertype_ETEMPTBD '^intertype@2^', \"no such type #{rpr hedges}\"\n      verdict = test x\n      return @_protocol_isa name, verdict, verdict\n    #.......................................................................................................\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _match_hedge_and_type_cfg: ( hedge, type_cfg ) ->\n    for property, value of hedge.match\n      return true if property is 'all'\n      return false unless type_cfg[ property ]\n    return true\n\n  #---------------------------------------------------------------------------------------------------------\n  declare: ( type, type_cfg ) =>\n    ### TAINT code duplication ###\n    ### TAINT find better name for `name` ###\n    debug '^43354^', { type, }\n    type_cfg    = new ITYP.Type_cfg @, type_cfg\n    # seen_paths  = new Set()\n    for group in type_cfg.groups\n      for hedgepath from @_hedges.hedgepaths[ group ]\n        # continue if seen_paths.has group\n        # seen_paths.add hedgepath\n        name            = [ hedgepath..., type, ].join @cfg.sep\n        ### TAINT must include test for hedges ###\n        typetest        = type_cfg.test.bind @\n        @_types[ name ] = { type_cfg..., name, type, test: typetest, }\n        @_declare_hedgepath { method: @isa, typetest, type, type_cfg, name, hedgepath, }\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  _protocol_isa: ( term, result, verdict ) ->\n    urge '^_protocol_isa@1^', { term, result, verdict, }\n    return verdict\n\n  #---------------------------------------------------------------------------------------------------------\n  _declare_hedgepath: ({ method, typetest, type, type_cfg, name, hedgepath, }) =>\n    parent        = method\n    hedgemethods  = []\n    parent        = do =>\n      for term in hedgepath\n        hedgemethod = @_hedges._hedgemethods[ term ]\n        hedgemethods.push [ term, hedgemethod, ]\n        debug '^34455^', { hedgepath, hedgemethod, }\n        unless parent.has term\n          ### TAINT consider to make functions out of these (re-use `method`?) ###\n          GUY.props.hide parent, term, new GUY.props.Strict_owner()\n        parent = parent[ term ]\n      return parent\n    #.......................................................................................................\n    unless parent.has type\n      #.....................................................................................................\n      test = ( x ) =>\n        for [ term, hedgemethod, ], hedge_idx in hedgemethods\n          urge '^_declare_hedgepath.test@1^', { term, hedgemethod, }\n          switch R = hedgemethod.call @, x\n            when H.signals.true_and_break   then return @_protocol_isa term, R, true\n            when H.signals.false_and_break  then return @_protocol_isa term, R, false\n            when false                      then return @_protocol_isa term, R, false\n            when true                       then        @_protocol_isa term, R, true\n            when H.signals.process_list_elements, H.signals.process_set_elements\n              tail = ( hedgemethods[ idx ][ 0 ] for idx in [ hedge_idx + 1 ... hedgemethods.length ] )\n              tail.push type\n              info '^34435^', tail\n              for e from x\n                return @_protocol_isa term, R, false unless @isa tail..., e\n              return @_protocol_isa term, R, true\n            else throw new E.Intertype_internal_error '^intertype@1^', \\\n              \"unexpected return value from hedgemethod for term #{rpr term}: #{rpr R}\"\n        verdict = typetest.call @, x\n        return @_protocol_isa type, verdict, verdict\n      #.....................................................................................................\n      GUY.props.hide parent, type, test\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  js_type_of:                 ( x ) => ( ( Object::toString.call x ).slice 8, -1 ).toLowerCase().replace /\\s+/g, ''\n  _normalize_type:            ( type ) -> type.toLowerCase().replace /\\s+/g, ''\n  _constructor_of_generators: ( ( -> yield 42 )() ).constructor\n\n  #---------------------------------------------------------------------------------------------------------\n  type_of: ( x ) ->\n    throw new Error \"^7746^ expected 1 argument, got #{arity}\" unless ( arity = arguments.length ) is 1\n    return 'null'       if x is null\n    return 'undefined'  if x is undefined\n    return 'infinity'   if ( x is Infinity  ) or  ( x is -Infinity  )\n    return 'boolean'    if ( x is true      ) or  ( x is false      )\n    return 'nan'        if ( Number.isNaN     x )\n    return 'float'      if ( Number.isFinite  x )\n    return 'buffer'     if ( Buffer.isBuffer  x )\n    return 'list'       if ( Array.isArray  x )\n    #.........................................................................................................\n    ### TAINT Not needed (?) b/c `@js_type_of x` does work with these values, too ###\n    ### this catches `Array Iterator`, `String Iterator`, `Map Iterator`, `Set Iterator`: ###\n    if ( tagname = x[ Symbol.toStringTag ] )? and ( typeof tagname ) is 'string'\n      return @_normalize_type tagname\n    #.........................................................................................................\n    ### Domenic Denicola Device, see https://stackoverflow.com/a/30560581 ###\n    return 'nullobject' if ( c = x.constructor ) is undefined\n    return 'object'     if ( typeof c ) isnt 'function'\n    if ( R = c.name.toLowerCase() ) is ''\n      return 'generator' if x.constructor is @_constructor_of_generators\n      ### NOTE: throw error since this should never happen ###\n      return ( ( Object::toString.call x ).slice 8, -1 ).toLowerCase() ### Mark Miller Device ###\n    #.........................................................................................................\n    return 'wrapper'  if ( typeof x is 'object' ) and R in [ 'boolean', 'number', 'string', ]\n    return 'regex'    if R is 'regexp'\n    return 'text'     if R is 'string'\n    ### thx to https://stackoverflow.com/a/29094209 ###\n    ### TAINT may produce an arbitrarily long throwaway string ###\n    return 'class'    if R is 'function' and x.toString().startsWith 'class '\n    return R\n\n############################################################################################################\n@defaults = GUY.lft.freeze @defaults\n\n#===========================================================================================================\nx = new @Intertype()\n# urge x.foo = 42\n# urge x.foo\n# urge x.has\n# urge x.has.foo\n# urge x.has.bar\n# try urge x.bar catch error then warn CND.reverse error.message\n\njs_type_of               = ( x ) => ( ( Object::toString.call x ).slice 8, -1 ).toLowerCase().replace /\\s+/g, ''\nlength_of = ( x ) ->\n  throw new Error \"^1^\" unless x?\n  return x.length if Object.hasOwnProperty x, length\n  return x.size   if Object.hasOwnProperty x, size\n  return ( Object.keys x ).length if ( js_type_of x ) is 'object'\n  throw new Error \"^2^\"\nnonempty  = ( x ) -> ( length_of x ) > 0\nempty     = ( x ) -> ( length_of x ) == 0\nlist_of   = ( type, x ) ->\n  return false unless ( js_type_of x ) is 'array'\n  return true if x.length is 0\n  # return x.every ( e ) -> isa type, e\n  return x.every ( e ) -> ( js_type_of e ) is type ### TAINT should use `isa` ###\n\n###\n\ntypes.isa.integer                                           42\ntypes.isa.even.integer                                      -42\ntypes.isa.odd.integer                                       41\ntypes.isa.negative1.integer                                 -42\ntypes.isa.negative0.integer                                 0\ntypes.isa.positive1.integer                                 42\ntypes.isa.positive0.integer                                 0\ntypes.isa.list_of.integer                                   [ 42, ]\ntypes.isa.nonempty.list_of.negative1.integer                [ -42, ]\ntypes.isa.nonempty.list_of.negative0.integer                [ 0, ]\ntypes.isa.nonempty.list_of.positive1.integer                [ 42, ]\ntypes.isa.nonempty.list_of.positive0.integer                [ 0, ]\ntypes.isa.empty.list_of.integer                             []\ntypes.isa.nonempty.list_of.integer                          [ 42, ]\ntypes.isa.optional.integer                                  42\ntypes.isa.optional.list_of.integer                          [ 42, ]\ntypes.isa.optional.empty.list_of.integer                    []\ntypes.isa.optional.nonempty.list_of.integer                 [ 42, ]\ntypes.isa.optional.negative1.integer                        -42\ntypes.isa.optional.negative0.integer                        0\ntypes.isa.optional.positive1.integer                        42\ntypes.isa.optional.positive0.integer                        0\ntypes.isa.optional.nonempty.list_of.negative1.integer       [ -42, ]\ntypes.isa.optional.nonempty.list_of.negative0.integer       [ 0, ]\ntypes.isa.optional.nonempty.list_of.positive1.integer       [ 42, ]\ntypes.isa.optional.nonempty.list_of.positive0.integer       [ 0, ]\ntypes.isa.optional.empty.list_of.negative1.integer          -42\ntypes.isa.optional.empty.list_of.negative0.integer          0\ntypes.isa.optional.empty.list_of.positive1.integer          42\ntypes.isa.optional.empty.list_of.positive0.integer          0\n\n[all]     [all]     [isa_collection]  [isa_collection]  [isa_numeric]   [isa_numeric]   [mandatory]\n————————————————————————————————————————————————————————————————————————————————————————————————————\nisa       optional  empty             list_of           even            negative0       <type>\nvalidate            nonempty                            odd             negative1\n                                                                        positive0\n                                                                        positive1\n###\n\n\n\n"
  ]
}