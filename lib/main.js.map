{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n#===========================================================================================================\nWG                        = require 'webguy'\n{ rpr }                   = WG.trm\n{ hide\n  nameit }                = WG.props\n{ debug }                 = console\n\n#===========================================================================================================\ndeclarations =\n\n  anything:               ( x ) -> true\n  nothing:                ( x ) -> not x?\n  something:              ( x ) -> x?\n  null:                   ( x ) -> x is null\n  boolean:                ( x ) -> ( x is true ) or ( x is false )\n  function:               ( x ) -> ( Object::toString.call x ) is '[object Function]'\n  asyncfunction:          ( x ) -> ( Object::toString.call x ) is '[object AsyncFunction]'\n  symbol:                 ( x ) -> ( typeof x ) is 'symbol'\n  object:                 ( x ) -> x? and ( typeof x is 'object' ) and ( ( Object::toString.call x ) is '[object Object]' )\n  text:                   ( x ) -> ( typeof x ) is 'string'\n  nullary:                ( x ) -> x? and ( ( x.length is 0 ) or ( x.size is 0 ) )\n  unary:                  ( x ) -> x? and ( ( x.length is 1 ) or ( x.size is 1 ) )\n  binary:                 ( x ) -> x? and ( ( x.length is 2 ) or ( x.size is 2 ) )\n  trinary:                ( x ) -> x? and ( ( x.length is 3 ) or ( x.size is 3 ) )\n  #.........................................................................................................\n  IT_listener:            ( x ) -> ( @isa.function x ) or ( @isa.asyncfunction x )\n  IT_note_$key:           ( x ) -> ( @isa.text x ) or ( @isa.symbol x )\n  unary_or_binary:        ( x ) -> ( @isa.unary   x ) or ( @isa.binary  x )\n  binary_or_trinary:      ( x ) -> ( @isa.binary  x ) or ( @isa.trinary x )\n  $freeze:                ( x ) -> @isa.boolean x\n\n#===========================================================================================================\nclass Intertype\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( declarations ) ->\n    hide @, 'isa',               { optional: {}, }\n    hide @, 'validate',          { optional: {}, }\n    #.......................................................................................................\n    ### TAINT prevent accidental overwrites ###\n    for type, test of declarations then do ( type, test ) =>\n      @isa[               type ] = @get_isa               type, test\n      @isa.optional[      type ] = @get_isa_optional      type, test\n      @validate[          type ] = @get_validate          type, test\n      @validate.optional[ type ] = @get_validate_optional type, test\n    #.......................................................................................................\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  ### TAINT may want to check type, arities ###\n  get_isa:                ( type, test ) -> ( x ) => test.call @, x\n  get_isa_optional:       ( type, test ) -> ( x ) => if x? then ( test.call @, x )               else true\n  get_validate_optional:  ( type, test ) -> ( x ) => if x? then ( @validate[ type ].call @, x )  else x\n  get_validate:           ( type, test ) -> ( x ) ->\n    return x if test.call @, x\n    ### TAINT `typeof` will give some strange results ###\n    throw new Error \"expected a #{type}, got a #{typeof x}\"\n\n\n#===========================================================================================================\ntypes = new Intertype declarations\n\n#===========================================================================================================\nmodule.exports = { Intertype, types, declarations, }\n"
  ]
}