{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\n# njs_util                  = require 'util'\nnjs_path                  = require 'path'\n# njs_fs                    = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr.bind CND\nbadge                     = 'INTERTYPE/main'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\npraise                    = CND.get_logger 'praise',    badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nGUY                       = require 'guy'\nE                         = require './errors'\n\n\n#===========================================================================================================\nclass Intertype_abc extends GUY.props.Strict_owner\n\n  # #---------------------------------------------------------------------------------------------------------\n  # constructor: ->\n  #   super()\n  #   return undefined\n\n#===========================================================================================================\nclass Empty     extends Intertype_abc\nclass Nonempty  extends Intertype_abc\nclass List_of   extends Intertype_abc\nclass Defaults  extends Intertype_abc\n\n#===========================================================================================================\nclass Isa_list_of extends Intertype_abc\n\n#===========================================================================================================\nclass Validate_list_of extends Intertype_abc\n\n#===========================================================================================================\nclass Isa_empty extends Intertype_abc\n  list_of:    new Isa_list_of()\n\n#===========================================================================================================\nclass Validate_empty extends Intertype_abc\n  list_of:    new Validate_list_of()\n\n#===========================================================================================================\nclass Isa_nonempty extends Intertype_abc\n  list_of:    new Isa_list_of()\n\n#===========================================================================================================\nclass Validate_nonempty extends Intertype_abc\n  list_of:    new Validate_list_of()\n\n#===========================================================================================================\nclass Isa_optional extends Intertype_abc\n  empty:      new Isa_empty()\n  nonempty:   new Isa_nonempty()\n  list_of:    new Isa_list_of()\n\n#===========================================================================================================\nclass Validate_optional extends Intertype_abc\n  empty:      new Validate_empty()\n  nonempty:   new Validate_nonempty()\n  list_of:    new Validate_list_of()\n\n\n#===========================================================================================================\nclass Isa extends Intertype_abc\n  optional:   new Isa_optional()\n  empty:      new Isa_empty()\n  nonempty:   new Isa_nonempty()\n  list_of:    new Isa_list_of()\n\n#===========================================================================================================\nclass Validate extends Intertype_abc\n  optional:   new Validate_optional()\n  empty:      new Validate_empty()\n  nonempty:   new Validate_nonempty()\n  list_of:    new Validate_list_of()\n\n#===========================================================================================================\nclass @Intertype extends Intertype_abc\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ->\n    super()\n    # @defaults           = new Defaults()\n    # @isa                = new Isa()\n    # @validate           = new Validate()\n    @_types             = {}\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  declare: ( hedges..., type, descriptor ) =>\n    ### TAINT code duplication ###\n    ### TAINT find better name for `name` ###\n    ### TAINT ensure descriptor does not contain type, name ###\n    defaults    = { numeric: false, collection: false, }\n    descriptor  = { defaults..., descriptor..., }\n    hedges.push type\n    if hedges[ 0 ] is 'optional'\n      throw new E.Intertype_ETEMPTBD '^intertype@1^', \"'optional' cannot be a hedge in declarations, got #{rpr hedges}\"\n    mandatory_name                = ( hedges.join '_' )\n    mandatory_test                = descriptor.test.bind @\n    optional_name                 = \"optional_#{mandatory_name}\"\n    optional_test                 = ( test = ( x ) -> ( not x? ) or ( mandatory_test x ) ).bind @\n    # debug '^4234^', { mandatory_name, mandatory_test, optional_name, optional_test, }\n    @_types[ mandatory_name     ] = { descriptor..., name: mandatory_name, type, test: mandatory_test, }\n    @_types[ optional_name      ] = { descriptor..., name: optional_name,  type, test: optional_test,  }\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  isa: ( hedges..., type, x ) =>\n    ### TAINT code duplication ###\n    hedges.push type\n    name = ( hedges.join '_' )\n    debug '^4563^', name\n    # throw new Error '^534-1^' if hedges.length isnt 1\n    unless ( test = @_types[ name ]?.test )?\n      throw new E.Intertype_ETEMPTBD '^intertype@2^', \"no such type #{rpr hedges}\"\n    return test x\n\n  #---------------------------------------------------------------------------------------------------------\n  js_type_of:                 ( x ) => ( ( Object::toString.call x ).slice 8, -1 ).toLowerCase().replace /\\s+/g, ''\n  _normalize_type:            ( type ) -> type.toLowerCase().replace /\\s+/g, ''\n  _constructor_of_generators: ( ( -> yield 42 )() ).constructor\n\n  #---------------------------------------------------------------------------------------------------------\n  type_of: ( x ) ->\n    throw new Error \"^7746^ expected 1 argument, got #{arity}\" unless ( arity = arguments.length ) is 1\n    return 'null'       if x is null\n    return 'undefined'  if x is undefined\n    return 'infinity'   if ( x is Infinity  ) or  ( x is -Infinity  )\n    return 'boolean'    if ( x is true      ) or  ( x is false      )\n    return 'nan'        if ( Number.isNaN     x )\n    return 'float'      if ( Number.isFinite  x )\n    return 'buffer'     if ( Buffer.isBuffer  x )\n    return 'list'       if ( Array.isArray  x )\n    #.........................................................................................................\n    ### TAINT Not needed (?) b/c `@js_type_of x` does work with these values, too ###\n    ### this catches `Array Iterator`, `String Iterator`, `Map Iterator`, `Set Iterator`: ###\n    if ( tagname = x[ Symbol.toStringTag ] )? and ( typeof tagname ) is 'string'\n      return @_normalize_type tagname\n    #.........................................................................................................\n    ### Domenic Denicola Device, see https://stackoverflow.com/a/30560581 ###\n    return 'nullobject' if ( c = x.constructor ) is undefined\n    return 'object'     if ( typeof c ) isnt 'function'\n    if ( R = c.name.toLowerCase() ) is ''\n      return 'generator' if x.constructor is @_constructor_of_generators\n      ### NOTE: throw error since this should never happen ###\n      return ( ( Object::toString.call x ).slice 8, -1 ).toLowerCase() ### Mark Miller Device ###\n    #.........................................................................................................\n    return 'wrapper'  if ( typeof x is 'object' ) and R in [ 'boolean', 'number', 'string', ]\n    return 'regex'    if R is 'regexp'\n    return 'text'     if R is 'string'\n    ### thx to https://stackoverflow.com/a/29094209 ###\n    ### TAINT may produce an arbitrarily long throwaway string ###\n    return 'class'    if R is 'function' and x.toString().startsWith 'class '\n    return R\n\n\n\n#===========================================================================================================\nx = new @Intertype()\n# urge x.foo = 42\n# urge x.foo\n# urge x.has\n# urge x.has.foo\n# urge x.has.bar\ntry urge x.bar catch error then warn CND.reverse error.message\n\njs_type_of               = ( x ) => ( ( Object::toString.call x ).slice 8, -1 ).toLowerCase().replace /\\s+/g, ''\nlength_of = ( x ) ->\n  throw new Error \"^1^\" unless x?\n  return x.length if Object.hasOwnProperty x, length\n  return x.size   if Object.hasOwnProperty x, size\n  return ( Object.keys x ).length if ( js_type_of x ) is 'object'\n  throw new Error \"^2^\"\nnonempty  = ( x ) -> ( length_of x ) > 0\nempty     = ( x ) -> ( length_of x ) == 0\nlist_of   = ( type, x ) ->\n  return false unless ( js_type_of x ) is 'array'\n  return true if x.length is 0\n  # return x.every ( e ) -> isa type, e\n  return x.every ( e ) -> ( js_type_of e ) is type ### TAINT should use `isa` ###\n\n###\n\ntypes.isa.integer                                           42\ntypes.isa.even.integer                                      -42\ntypes.isa.odd.integer                                       41\ntypes.isa.negative1.integer                                 -42\ntypes.isa.negative0.integer                                 0\ntypes.isa.positive1.integer                                 42\ntypes.isa.positive0.integer                                 0\ntypes.isa.list_of.integer                                   [ 42, ]\ntypes.isa.nonempty.list_of.negative1.integer                [ -42, ]\ntypes.isa.nonempty.list_of.negative0.integer                [ 0, ]\ntypes.isa.nonempty.list_of.positive1.integer                [ 42, ]\ntypes.isa.nonempty.list_of.positive0.integer                [ 0, ]\ntypes.isa.empty.list_of.integer                             []\ntypes.isa.nonempty.list_of.integer                          [ 42, ]\ntypes.isa.optional.integer                                  42\ntypes.isa.optional.list_of.integer                          [ 42, ]\ntypes.isa.optional.empty.list_of.integer                    []\ntypes.isa.optional.nonempty.list_of.integer                 [ 42, ]\ntypes.isa.optional.negative1.integer                        -42\ntypes.isa.optional.negative0.integer                        0\ntypes.isa.optional.positive1.integer                        42\ntypes.isa.optional.positive0.integer                        0\ntypes.isa.optional.nonempty.list_of.negative1.integer       [ -42, ]\ntypes.isa.optional.nonempty.list_of.negative0.integer       [ 0, ]\ntypes.isa.optional.nonempty.list_of.positive1.integer       [ 42, ]\ntypes.isa.optional.nonempty.list_of.positive0.integer       [ 0, ]\ntypes.isa.optional.empty.list_of.negative1.integer          -42\ntypes.isa.optional.empty.list_of.negative0.integer          0\ntypes.isa.optional.empty.list_of.positive1.integer          42\ntypes.isa.optional.empty.list_of.positive0.integer          0\n\n[all]     [all]     [collections]   [collections]   [numerical]   [numerical]   [mandatory]\n————————————————————————————————————————————————————————————————————————————————————————————\nisa       optional  empty           list_of         even          negative0     <type>\nvalidate            nonempty                        odd           negative1\n                                                                  positive0\n                                                                  positive1\n\n###\n\n\n\n"
  ]
}