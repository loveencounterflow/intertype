{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "..",
  "sources": [
    "src/main.coffee"
  ],
  "names": [],
  "mappings": ";AACA;EAAA;AAAA,MAAA,GAAA,EAAA,QAAA,EAAA,KAAA,EAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA,YAAA,EAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,EAAA,GAAA,EAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,OAAA,EAAA,IAAA;;;EAGA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B,EAZ5B;;;EAcA,QAAA,GAA4B,OAAA,CAAQ,UAAR,EAd5B;;;EAgBA,CAAA,CAAE,MAAF,EACE,EADF,EAEE,OAFF,EAGE,IAHF,EAIE,UAJF,CAAA,GAI4B,OAAA,CAAQ,WAAR,CAJ5B,EAhBA;;;EAsBA,YAAA,GAA4B,OAAA,CAAQ,gBAAR,EAtB5B;;;EA0BA,GAAA,GAAM,QAAA,CAAE,IAAF,EAAA,GAAQ,EAAR,CAAA;IACJ,IAAe,CAAE,IAAC,CAAA,OAAD,CAAS,GAAA,EAAT,CAAF,CAAA,KAAsB,IAArC;AAAA,aAAO,KAAP;;AACA,WAAO,IAAC,CAAA,WAAD,CAAa,KAAb,EAAoB,IAApB,EAA0B,GAAA,EAA1B;EAFH,EA1BN;;;EA+BA,QAAA,GAAW,QAAA,CAAE,IAAF,EAAA,GAAQ,EAAR,CAAA;IACT,IAAO,CAAE,IAAC,CAAA,OAAD,CAAS,GAAA,EAAT,CAAF,CAAA,KAAsB,IAA7B;MACE,MAAM,IAAI,KAAJ,CAAU,OAAV,EADR;;AAEA,WAAO,IAAC,CAAA,WAAD,CAAa,IAAb,EAAmB,IAAnB,EAAyB,GAAA,EAAzB;EAHE,EA/BX;;;EAqCM,IAAC,CAAA;IAAP,MAAA,UAAA,QAAyB,SAAzB,CAAA;;MAOE,WAAa,cAAA,CAAA;;QAAE,IAAC,CAAA;QAEd,IAAC,CAAA,KAAD,GAAY,CAAA;QACZ,IAAC,CAAA,GAAD,GAAY,QAAQ,CAAC,mBAAT,CAA6B,IAA7B,EAAgC,GAAhC;QACZ,IAAC,CAAA,QAAD,GAAY,QAAQ,CAAC,mBAAT,CAA6B,IAA7B,EAAgC,QAAhC;QACZ,YAAY,CAAC,aAAa,CAAC,KAA3B,CAAiC,IAAjC;MALW;;IAPf;;;IAEE,SAAC,CAAA,OAAD,CAAS,OAAA,CAAQ,eAAR,CAAT;;IACA,SAAC,CAAA,OAAD,CAAS,OAAA,CAAQ,UAAR,CAAT;;IACA,SAAC,CAAA,OAAD,CAAS,OAAA,CAAQ,aAAR,CAAT;;;;;AAzCF",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'INTERTYPE/MAIN'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\n#...........................................................................................................\nMultimix                  = require 'multimix'\n#...........................................................................................................\n{ assign\n  jr\n  flatten\n  xrpr\n  js_type_of }            = require './helpers'\n#...........................................................................................................\ndeclarations              = require './declarations'\n\n\n#-----------------------------------------------------------------------------------------------------------\nisa = ( type, xP... ) ->\n  return true if ( @type_of xP... ) is type\n  return @_check_spec false, type, xP...\n\n#-----------------------------------------------------------------------------------------------------------\nvalidate = ( type, xP... ) ->\n  unless ( @type_of xP... ) is type\n    throw new Error \"Âµ3093\"\n  return @_check_spec true, type, xP...\n\n#===========================================================================================================\nclass @Intertype extends Multimix\n  # @extend   object_with_class_properties\n  @include require './cataloguing'\n  @include require './sizing'\n  @include require './declaring'\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( @instance_name ) ->\n    super()\n    @specs    = {}\n    @isa      = Multimix.get_keymethod_proxy @, isa\n    @validate = Multimix.get_keymethod_proxy @, validate\n    declarations.declare_types.apply @\n\n\n\n\n"
  ]
}