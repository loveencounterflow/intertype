{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n#===========================================================================================================\nWG                        = require 'webguy'\n{ rpr }                   = WG.trm\n{ hide\n  nameit }                = WG.props\n{ debug }                 = console\n\n#===========================================================================================================\ndeclarations = default_declarations =\n  anything:               ( x ) -> true\n  nothing:                ( x ) -> not x?\n  something:              ( x ) -> x?\n  null:                   ( x ) -> x is null\n  undefined:              ( x ) -> x is undefined\n  boolean:                ( x ) -> ( x is true ) or ( x is false )\n  function:               ( x ) -> ( Object::toString.call x ) is '[object Function]'\n  asyncfunction:          ( x ) -> ( Object::toString.call x ) is '[object AsyncFunction]'\n  symbol:                 ( x ) -> ( typeof x ) is 'symbol'\n  object:                 ( x ) -> x? and ( typeof x is 'object' ) and ( ( Object::toString.call x ) is '[object Object]' )\n  text:                   ( x ) -> ( typeof x ) is 'string'\n  regex:                  ( x ) -> x instanceof RegExp\n  nullary:                ( x ) -> x? and ( ( x.length is 0 ) or ( x.size is 0 ) )\n  unary:                  ( x ) -> x? and ( ( x.length is 1 ) or ( x.size is 1 ) )\n  binary:                 ( x ) -> x? and ( ( x.length is 2 ) or ( x.size is 2 ) )\n  trinary:                ( x ) -> x? and ( ( x.length is 3 ) or ( x.size is 3 ) )\n  #.........................................................................................................\n  unknown:                ( x ) -> ( @type_of x ) is 'unknown'\n  #.........................................................................................................\n  IT_listener:            ( x ) -> ( @isa.function x ) or ( @isa.asyncfunction x )\n  IT_note_$key:           ( x ) -> ( @isa.text x ) or ( @isa.symbol x )\n  unary_or_binary:        ( x ) -> ( @isa.unary   x ) or ( @isa.binary  x )\n  binary_or_trinary:      ( x ) -> ( @isa.binary  x ) or ( @isa.trinary x )\n  $freeze:                ( x ) -> @isa.boolean x\n\n#===========================================================================================================\n### TAINT make configurable in type declaration? ###\nskip_types = new Set [\n  'anything'\n  'nothing'\n  'something'\n  'null'\n  'undefined'\n  'unknown' ]\n\n#===========================================================================================================\nclass Intertype\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( declarations = null ) ->\n    declarations ?= default_declarations\n    #.......................................................................................................\n    hide @, 'isa',               { optional: {}, }\n    hide @, 'validate',          { optional: {}, }\n    hide @, '_type_of_tests',    {}\n    #.......................................................................................................\n    ### TAINT prevent accidental overwrites ###\n    for type, test of declarations then do ( type, test ) =>\n      @isa[               type ] = @get_isa               type, test\n      @isa.optional[      type ] = @get_isa_optional      type, test\n      @validate[          type ] = @get_validate          type, test\n      @validate.optional[ type ] = @get_validate_optional type, test\n      return if skip_types.has type\n      @_type_of_tests[    type ] = @isa[ type ]\n    #.......................................................................................................\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  ### TAINT may want to check type, arities ###\n  get_isa:                ( type, test ) -> ( x ) => test.call @, x\n  get_isa_optional:       ( type, test ) -> ( x ) => if x? then ( test.call @, x )               else true\n  get_validate_optional:  ( type, test ) -> ( x ) =>\n    return x unless x?\n    ### TAINT code duplication ###\n    return x if test.call @, x\n    throw new Error \"expected an optional #{type}, got a #{typeof x}\" ### TAINT `typeof` will give some strange results ###\n  get_validate:           ( type, test ) -> ( x ) =>\n    ### TAINT code duplication ###\n    return x if test.call @, x\n    throw new Error \"expected a #{type}, got a #{typeof x}\" ### TAINT `typeof` will give some strange results ###\n\n  #---------------------------------------------------------------------------------------------------------\n  type_of: ( x ) ->\n    return 'null'       if x is null\n    return 'undefined'  if x is undefined\n    for type, test of @_type_of_tests\n      return type if test x\n    return 'unknown'\n\n\n#===========================================================================================================\ntypes = new Intertype declarations\n\n#===========================================================================================================\nmodule.exports = { Intertype, types, declarations, }\n"
  ]
}