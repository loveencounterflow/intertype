{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n#===========================================================================================================\n{ SUBSIDIARY }            = require 'subsidiary'\nWG                        = require 'webguy'\nrpr                       = WG.trm.rpr\n\n\n#===========================================================================================================\ndeclarations =\n\n  anything:               ( x ) -> true\n  nothing:                ( x ) -> not x?\n  something:              ( x ) -> x?\n  null:                   ( x ) -> x is null\n  boolean:                ( x ) -> ( x is true ) or ( x is false )\n  function:               ( x ) -> ( Object::toString.call x ) is '[object Function]'\n  asyncfunction:          ( x ) -> ( Object::toString.call x ) is '[object AsyncFunction]'\n  symbol:                 ( x ) -> ( typeof x ) is 'symbol'\n  object:                 ( x ) -> x? and ( typeof x is 'object' ) and ( ( Object::toString.call x ) is '[object Object]' )\n  text:                   ( x ) -> ( typeof x ) is 'string'\n  nullary:                ( x ) -> x? and ( x.length is 0 )\n  unary:                  ( x ) -> x? and ( x.length is 1 )\n  binary:                 ( x ) -> x? and ( x.length is 2 )\n  #.........................................................................................................\n  IT_listener:            ( x ) -> ( @function x ) or ( @asyncfunction x )\n  IT_note_$key:           ( x ) -> ( @text x ) or ( @symbol x )\n  unary_or_binary:        ( x ) -> x? and ( ( x.length is 1 ) or ( x.length is 2 ) )\n  binary_or_trinary:      ( x ) -> x? and ( ( x.length is 2 ) or ( x.length is 3 ) )\n  $freeze:                ( x ) -> @boolean x\n\n#===========================================================================================================\nclass Intertype\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( declarations ) ->\n    SUBSIDIARY.tie_one { host: @, subsidiary_key: 'isa',               subsidiary: {}, enumerable: false, }\n    SUBSIDIARY.tie_one { host: @, subsidiary_key: 'isa_optional',      subsidiary: {}, enumerable: false, }\n    SUBSIDIARY.tie_one { host: @, subsidiary_key: 'validate',          subsidiary: {}, enumerable: false, }\n    SUBSIDIARY.tie_one { host: @, subsidiary_key: 'validate_optional', subsidiary: {}, enumerable: false, }\n    #.......................................................................................................\n    for type, test of declarations then do ( type, test ) =>\n      @isa[               type ] = ( x ) => if x? then ( test.call @, x )             else true\n      @isa_optional[      type ] = ( x ) => if x? then ( test.call @, x )             else true\n      @validate_optional[ type ] = ( x ) => if x? then ( validate[ type ].call @, x ) else x\n      @validate[          type ] = ( x ) =>\n        return x if test.call @, x\n        ### TAINT `typeof` will give some strange results ###\n        throw new Error \"expected a #{type}, got a #{typeof x}\"\n    #.......................................................................................................\n    return undefined\n\n\n#===========================================================================================================\ntypes = new Intertype declarations\n\n#===========================================================================================================\nmodule.exports = { Intertype, types, declarations, }\n"
  ]
}