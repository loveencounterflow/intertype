{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n#===========================================================================================================\nWG                        = require 'webguy'\n{ rpr }                   = WG.trm\n{ hide\n  nameit }                = WG.props\n{ debug }                 = console\nE                         = require './errors'\n\n\n#===========================================================================================================\nbuilt_ins =\n  anything:               ( x ) -> true\n  nothing:                ( x ) -> not x?\n  something:              ( x ) -> x?\n  null:                   ( x ) -> x is null\n  undefined:              ( x ) -> x is undefined\n  unknown:                ( x ) -> ( @type_of x ) is 'unknown'\n\n#-----------------------------------------------------------------------------------------------------------\ndefault_declarations =\n  boolean:                ( x ) -> ( x is true ) or ( x is false )\n  function:               ( x ) -> ( Object::toString.call x ) is '[object Function]'\n  asyncfunction:          ( x ) -> ( Object::toString.call x ) is '[object AsyncFunction]'\n  symbol:                 ( x ) -> ( typeof x ) is 'symbol'\n  object:                 ( x ) -> x? and ( typeof x is 'object' ) and ( ( Object::toString.call x ) is '[object Object]' )\n  float:                  ( x ) -> Number.isFinite x\n  text:                   ( x ) -> ( typeof x ) is 'string'\n  regex:                  ( x ) -> x instanceof RegExp\n  nullary:                ( x ) -> x? and ( ( x.length is 0 ) or ( x.size is 0 ) )\n  unary:                  ( x ) -> x? and ( ( x.length is 1 ) or ( x.size is 1 ) )\n  binary:                 ( x ) -> x? and ( ( x.length is 2 ) or ( x.size is 2 ) )\n  trinary:                ( x ) -> x? and ( ( x.length is 3 ) or ( x.size is 3 ) )\n  #.........................................................................................................\n  IT_listener:            ( x ) -> ( @isa.function x ) or ( @isa.asyncfunction x )\n  IT_note_$key:           ( x ) -> ( @isa.text x ) or ( @isa.symbol x )\n  unary_or_binary:        ( x ) -> ( @isa.unary   x ) or ( @isa.binary  x )\n  binary_or_trinary:      ( x ) -> ( @isa.binary  x ) or ( @isa.trinary x )\n  $freeze:                ( x ) -> @isa.boolean x\n\n#-----------------------------------------------------------------------------------------------------------\n# internal_declarations = { default_declarations..., }\ninternal_declarations = {\n  default_declarations...\n  foo: ( x ) -> x is 'foo'\n  bar: ( x ) -> x is 'bar'\n  }\n\n\n#===========================================================================================================\nclass _Intertype\n\n  #---------------------------------------------------------------------------------------------------------\n  ### TAINT may want to check type, arities ###\n  constructor: ( declarations = null ) ->\n    declarations ?= default_declarations\n    #.......................................................................................................\n    hide @, 'isa',                { optional: {}, }\n    hide @, 'validate',           { optional: {}, }\n    hide @, '_tests_for_type_of', {}\n    hide @, 'type_of',            ( P... ) => @_type_of P...\n    #.......................................................................................................\n    ### TAINT prevent accidental overwrites ###\n    for collection in [ built_ins, declarations, ]\n      for type, test of collection then do ( type, test ) =>\n        if Reflect.has @isa, type\n          throw new Error \"unable to re-declare type #{rpr type}\"\n        @isa[               type ] = @get_isa               type, test\n        @isa.optional[      type ] = @get_isa_optional      type, test\n        @validate[          type ] = @get_validate          type, test\n        @validate.optional[ type ] = @get_validate_optional type, test\n        @_tests_for_type_of[    type ] = @isa[ type ] if collection isnt built_ins\n    #.......................................................................................................\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  ### TAINT may want to check type, arities ###\n  get_isa: ( type, test ) ->\n    me = @\n    return nameit \"isa_#{type}\", ( x ) ->\n      if ( me.constructor isnt _Intertype ) and ( arguments.length isnt 1 )\n        throw new E.Intertype_wrong_arity \"^isa_#{type}@1^\", 1, arguments.length\n      return test.call me, x\n\n  #---------------------------------------------------------------------------------------------------------\n  ### TAINT may want to check type, arities ###\n  get_isa_optional: ( type, test ) ->\n    me = @\n    return nameit \"isa_optional_#{type}\", ( x ) ->\n      if ( me.constructor isnt _Intertype ) and ( arguments.length isnt 1 )\n        throw new E.Intertype_wrong_arity \"^isa_optional_#{type}@1^\", 1, arguments.length\n      if x? then ( test.call me, x ) else true\n\n  #---------------------------------------------------------------------------------------------------------\n  ### TAINT may want to check type, arities ###\n  get_validate: ( type, test ) ->\n    me = @\n    return nameit \"validate_#{type}\", ( x ) ->\n      if ( me.constructor isnt _Intertype ) and ( arguments.length isnt 1 )\n        throw new E.Intertype_wrong_arity \"^validate_#{type}@1^\", 1, arguments.length\n      return x if test.call me, x\n      throw new E.Intertype_validation_error \"^validate_#{type}@1^\", type, typeof x ### TAINT `typeof` will give some strange results ###\n\n  #---------------------------------------------------------------------------------------------------------\n  ### TAINT may want to check type, arities ###\n  get_validate_optional: ( type, test ) ->\n    me = @\n    return nameit \"validate_optional_#{type}\", ( x ) ->\n      if ( me.constructor isnt _Intertype ) and ( arguments.length isnt 1 )\n        throw new E.Intertype_wrong_arity \"^validate_optional_#{type}@1^\", 1, arguments.length\n      return x unless x?\n      return x if test.call me, x\n      throw new E.Intertype_optional_validation_error \"^validate_optional_#{type}@1^\", type, typeof x ### TAINT `typeof` will give some strange results ###\n\n  #---------------------------------------------------------------------------------------------------------\n  ### TAINT may want to check type, arities ###\n  _type_of: ( x ) ->\n    if ( @constructor isnt _Intertype ) and ( arguments.length isnt 1 )\n      throw new E.Intertype_wrong_arity \"^type_of@1^\", 1, arguments.length\n    return 'null'       if x is null\n    return 'undefined'  if x is undefined\n    for type, test of @_tests_for_type_of\n      return type if test x\n    return 'unknown'\n\n#===========================================================================================================\nclass Intertype extends _Intertype\n\n\n#===========================================================================================================\ninternal_types  = new _Intertype internal_declarations\ntypes           = new Intertype default_declarations\n\n#===========================================================================================================\nmodule.exports = { Intertype, types, declarations: default_declarations, }\n"
  ]
}