{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\n# njs_util                  = require 'util'\nnjs_path                  = require 'path'\n# njs_fs                    = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr.bind CND\nbadge                     = 'INTERTYPE/main'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\npraise                    = CND.get_logger 'praise',    badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nGUY                       = require 'guy'\nE                         = require './errors'\nITYP                      = @\n\n\n#===========================================================================================================\nclass Intertype_abc extends GUY.props.Strict_owner\n\n  # #---------------------------------------------------------------------------------------------------------\n  # constructor: ->\n  #   super()\n  #   return undefined\n\n#===========================================================================================================\nclass Empty     extends Intertype_abc\nclass Nonempty  extends Intertype_abc\nclass List_of   extends Intertype_abc\nclass Defaults  extends Intertype_abc\n\n#===========================================================================================================\nclass Isa_list_of extends Intertype_abc\n\n#===========================================================================================================\nclass Validate_list_of extends Intertype_abc\n\n#===========================================================================================================\nclass Isa_empty extends Intertype_abc\n  list_of:    new Isa_list_of()\n\n#===========================================================================================================\nclass Validate_empty extends Intertype_abc\n  list_of:    new Validate_list_of()\n\n#===========================================================================================================\nclass Isa_nonempty extends Intertype_abc\n  list_of:    new Isa_list_of()\n\n#===========================================================================================================\nclass Validate_nonempty extends Intertype_abc\n  list_of:    new Validate_list_of()\n\n#===========================================================================================================\nclass Isa_optional extends Intertype_abc\n  empty:      new Isa_empty()\n  nonempty:   new Isa_nonempty()\n  list_of:    new Isa_list_of()\n\n#===========================================================================================================\nclass Validate_optional extends Intertype_abc\n  empty:      new Validate_empty()\n  nonempty:   new Validate_nonempty()\n  list_of:    new Validate_list_of()\n\n\n#===========================================================================================================\nclass Isa extends Intertype_abc\n  optional:   new Isa_optional()\n  empty:      new Isa_empty()\n  nonempty:   new Isa_nonempty()\n  list_of:    new Isa_list_of()\n\n#===========================================================================================================\nclass Validate extends Intertype_abc\n  optional:   new Validate_optional()\n  empty:      new Validate_empty()\n  nonempty:   new Validate_nonempty()\n  list_of:    new Validate_list_of()\n\n\n#===========================================================================================================\nclass @Type_cfg extends Intertype_abc\n\n  #---------------------------------------------------------------------------------------------------------\n  @defaults: GUY.lft.freeze\n    #.......................................................................................................\n    constructor_cfg:\n      isa_numeric:      false\n      isa_collection:   false\n      size:             null  # defaults to `'length'` where `isa_collection` is `true`\n      test:             null\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    ### TAINT ensure type_cfg does not contain `type`, `name` ###\n    super()\n    cfg         = { @constructor.defaults.constructor_cfg..., cfg..., }\n    cfg.size    = 'length' if cfg.isa_collection and not cfg.size?\n    cfg.size   ?= null\n    @[ k ]      = v for k, v of cfg\n    return GUY.lft.freeze @\n\n#===========================================================================================================\nclass @Intertype extends Intertype_abc\n\n  #---------------------------------------------------------------------------------------------------------\n  @hedges: GUY.lft.freeze [\n    { x: [ 'optional',                                          ], match: { all: true,                } }\n    { x: [ 'empty', 'nonempty',                                 ], match: { isa: [ 'collection',  ],  } }\n    { x: [ 'list_of', 'set_of',                                 ], match: { isa: [ 'list',        ],  } }\n    { x: [ 'positive0', 'positive1', 'negative0', 'negative1',  ], match: { isa: [ 'numeric',     ],  } }\n    ]\n\n  #---------------------------------------------------------------------------------------------------------\n  @defaults: GUY.lft.freeze\n    #.......................................................................................................\n    constructor_cfg:\n      sep:  '$'\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    super()\n    # @defaults           = new Defaults()\n    # @isa                = new Isa()\n    # @validate           = new Validate()\n    @cfg      = { @constructor.defaults.constructor_cfg..., cfg..., }\n    @_types   = {}\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _XXX_walk_permutations: ( type_cfg, hedge_idx = 0, current_path = [] ) ->\n    ### thx to https://itecnote.com/tecnote/java-generate-all-combinations-from-multiple-lists/ ###\n    if hedge_idx is @constructor.hedges.length\n      yield current_path\n      return null\n    hedge = @constructor.hedges[ hedge_idx ]\n    yield from @_XXX_walk_permutations type_cfg, hedge_idx + 1, current_path\n    for term, term_idx in hedge.x\n      next_path = [ current_path..., ]\n      next_path.push term\n      yield from @_XXX_walk_permutations type_cfg, hedge_idx + 1, next_path\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  declare: ( hedges..., type, type_cfg ) =>\n    ### TAINT code duplication ###\n    ### TAINT find better name for `name` ###\n    type_cfg  = new ITYP.Type_cfg type_cfg\n    hedges.push type\n    if hedges[ 0 ] is 'optional'\n      throw new E.Intertype_ETEMPTBD '^intertype@1^', \"'optional' cannot be a hedge in declarations, got #{rpr hedges}\"\n    mandatory_name                = ( hedges.join @cfg.sep )\n    mandatory_test                = type_cfg.test.bind @\n    optional_name                 = \"optional#{@cfg.sep}#{mandatory_name}\"\n    optional_test                 = ( test = ( x ) -> ( not x? ) or ( mandatory_test x ) ).bind @\n    # debug '^4234^', { mandatory_name, mandatory_test, optional_name, optional_test, }\n    @_types[ mandatory_name     ] = { type_cfg..., name: mandatory_name, type, test: mandatory_test, }\n    @_types[ optional_name      ] = { type_cfg..., name: optional_name,  type, test: optional_test,  }\n    #.......................................................................................................\n    if type_cfg.isa_collection\n      mandatory_empty_name                   = \"empty#{@cfg.sep}#{mandatory_name}\"\n      mandatory_empty_test                   = ( test = ( x ) -> ( mandatory_test x ) and ( @_is_empty type_cfg, x ) ).bind @\n      optional_empty_name                    = \"optional#{@cfg.sep}#{mandatory_empty_name}\"\n      optional_empty_test                    = ( test = ( x ) -> ( not x? ) or ( mandatory_empty_test x ) ).bind @\n      @_types[ mandatory_empty_name        ] = { type_cfg..., name: mandatory_empty_name, type, test: mandatory_empty_test, }\n      @_types[ optional_empty_name         ] = { type_cfg..., name: optional_empty_name,  type, test: optional_empty_test,  }\n      mandatory_nonempty_name                = \"nonempty#{@cfg.sep}#{mandatory_name}\"\n      mandatory_nonempty_test                = ( test = ( x ) -> ( mandatory_test x ) and ( @_is_nonempty type_cfg, x ) ).bind @\n      optional_nonempty_name                 = \"optional#{@cfg.sep}#{mandatory_nonempty_name}\"\n      optional_nonempty_test                 = ( test = ( x ) -> ( not x? ) or ( mandatory_nonempty_test x ) ).bind @\n      @_types[ mandatory_nonempty_name     ] = { type_cfg..., name: mandatory_nonempty_name, type, test: mandatory_nonempty_test, }\n      @_types[ optional_nonempty_name      ] = { type_cfg..., name: optional_nonempty_name,  type, test: optional_nonempty_test,  }\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  _size_of:     ( type_cfg, x ) ->\n    unless type_cfg.size?\n      throw new Error E.Intertype_ETEMPTBD '^intertype@1^', \"\"\n    return ( Object.keys x ).length if type_cfg.size is 'keys'\n    return x[ type_cfg.size ]\n\n  #---------------------------------------------------------------------------------------------------------\n  _is_empty:    ( type_cfg, x ) -> ( @_size_of type_cfg, x ) is 0\n  _is_nonempty: ( type_cfg, x ) -> ( @_size_of type_cfg, x ) > 0\n\n  #---------------------------------------------------------------------------------------------------------\n  isa: ( hedges..., type, x ) =>\n    ### TAINT code duplication ###\n    hedges.push type\n    name = ( hedges.join @cfg.sep )\n    # throw new Error '^534-1^' if hedges.length isnt 1\n    unless ( test = @_types[ name ]?.test )?\n      throw new E.Intertype_ETEMPTBD '^intertype@2^', \"no such type #{rpr hedges}\"\n    return test x\n\n  #---------------------------------------------------------------------------------------------------------\n  js_type_of:                 ( x ) => ( ( Object::toString.call x ).slice 8, -1 ).toLowerCase().replace /\\s+/g, ''\n  _normalize_type:            ( type ) -> type.toLowerCase().replace /\\s+/g, ''\n  _constructor_of_generators: ( ( -> yield 42 )() ).constructor\n\n  #---------------------------------------------------------------------------------------------------------\n  type_of: ( x ) ->\n    throw new Error \"^7746^ expected 1 argument, got #{arity}\" unless ( arity = arguments.length ) is 1\n    return 'null'       if x is null\n    return 'undefined'  if x is undefined\n    return 'infinity'   if ( x is Infinity  ) or  ( x is -Infinity  )\n    return 'boolean'    if ( x is true      ) or  ( x is false      )\n    return 'nan'        if ( Number.isNaN     x )\n    return 'float'      if ( Number.isFinite  x )\n    return 'buffer'     if ( Buffer.isBuffer  x )\n    return 'list'       if ( Array.isArray  x )\n    #.........................................................................................................\n    ### TAINT Not needed (?) b/c `@js_type_of x` does work with these values, too ###\n    ### this catches `Array Iterator`, `String Iterator`, `Map Iterator`, `Set Iterator`: ###\n    if ( tagname = x[ Symbol.toStringTag ] )? and ( typeof tagname ) is 'string'\n      return @_normalize_type tagname\n    #.........................................................................................................\n    ### Domenic Denicola Device, see https://stackoverflow.com/a/30560581 ###\n    return 'nullobject' if ( c = x.constructor ) is undefined\n    return 'object'     if ( typeof c ) isnt 'function'\n    if ( R = c.name.toLowerCase() ) is ''\n      return 'generator' if x.constructor is @_constructor_of_generators\n      ### NOTE: throw error since this should never happen ###\n      return ( ( Object::toString.call x ).slice 8, -1 ).toLowerCase() ### Mark Miller Device ###\n    #.........................................................................................................\n    return 'wrapper'  if ( typeof x is 'object' ) and R in [ 'boolean', 'number', 'string', ]\n    return 'regex'    if R is 'regexp'\n    return 'text'     if R is 'string'\n    ### thx to https://stackoverflow.com/a/29094209 ###\n    ### TAINT may produce an arbitrarily long throwaway string ###\n    return 'class'    if R is 'function' and x.toString().startsWith 'class '\n    return R\n\n\n\n#===========================================================================================================\nx = new @Intertype()\n# urge x.foo = 42\n# urge x.foo\n# urge x.has\n# urge x.has.foo\n# urge x.has.bar\ntry urge x.bar catch error then warn CND.reverse error.message\n\njs_type_of               = ( x ) => ( ( Object::toString.call x ).slice 8, -1 ).toLowerCase().replace /\\s+/g, ''\nlength_of = ( x ) ->\n  throw new Error \"^1^\" unless x?\n  return x.length if Object.hasOwnProperty x, length\n  return x.size   if Object.hasOwnProperty x, size\n  return ( Object.keys x ).length if ( js_type_of x ) is 'object'\n  throw new Error \"^2^\"\nnonempty  = ( x ) -> ( length_of x ) > 0\nempty     = ( x ) -> ( length_of x ) == 0\nlist_of   = ( type, x ) ->\n  return false unless ( js_type_of x ) is 'array'\n  return true if x.length is 0\n  # return x.every ( e ) -> isa type, e\n  return x.every ( e ) -> ( js_type_of e ) is type ### TAINT should use `isa` ###\n\n###\n\ntypes.isa.integer                                           42\ntypes.isa.even.integer                                      -42\ntypes.isa.odd.integer                                       41\ntypes.isa.negative1.integer                                 -42\ntypes.isa.negative0.integer                                 0\ntypes.isa.positive1.integer                                 42\ntypes.isa.positive0.integer                                 0\ntypes.isa.list_of.integer                                   [ 42, ]\ntypes.isa.nonempty.list_of.negative1.integer                [ -42, ]\ntypes.isa.nonempty.list_of.negative0.integer                [ 0, ]\ntypes.isa.nonempty.list_of.positive1.integer                [ 42, ]\ntypes.isa.nonempty.list_of.positive0.integer                [ 0, ]\ntypes.isa.empty.list_of.integer                             []\ntypes.isa.nonempty.list_of.integer                          [ 42, ]\ntypes.isa.optional.integer                                  42\ntypes.isa.optional.list_of.integer                          [ 42, ]\ntypes.isa.optional.empty.list_of.integer                    []\ntypes.isa.optional.nonempty.list_of.integer                 [ 42, ]\ntypes.isa.optional.negative1.integer                        -42\ntypes.isa.optional.negative0.integer                        0\ntypes.isa.optional.positive1.integer                        42\ntypes.isa.optional.positive0.integer                        0\ntypes.isa.optional.nonempty.list_of.negative1.integer       [ -42, ]\ntypes.isa.optional.nonempty.list_of.negative0.integer       [ 0, ]\ntypes.isa.optional.nonempty.list_of.positive1.integer       [ 42, ]\ntypes.isa.optional.nonempty.list_of.positive0.integer       [ 0, ]\ntypes.isa.optional.empty.list_of.negative1.integer          -42\ntypes.isa.optional.empty.list_of.negative0.integer          0\ntypes.isa.optional.empty.list_of.positive1.integer          42\ntypes.isa.optional.empty.list_of.positive0.integer          0\n\n[all]     [all]     [isa_collection]  [isa_collection]  [isa_numeric]   [isa_numeric]   [mandatory]\n————————————————————————————————————————————————————————————————————————————————————————————————————\nisa       optional  empty             list_of           even            negative0       <type>\nvalidate            nonempty                            odd             negative1\n                                                                        positive0\n                                                                        positive1\n###\n\n\n\n"
  ]
}