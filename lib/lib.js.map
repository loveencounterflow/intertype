{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/lib.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ debug\n  warn }                  = GUY.trm.get_loggers 'demo-execa'\n{ rpr }                   = GUY.trm\n{ hide }                  = GUY.props\n{ props: {\n    nameit } }            = require 'webguy'\n\n\n#===========================================================================================================\n$isa =\n  text:       ( x ) -> typeof x is 'string'\n  function:   ( x ) -> ( Object::toString.call x ) is '[object Function]'\n  # nan:                    ( x ) => Number.isNaN         x\n  primitive:  ( x ) -> $primitive_types.includes $type_of x\n\n#-----------------------------------------------------------------------------------------------------------\n$primitive_types = Object.freeze [\n  'null', 'undefined', 'infinity', 'boolean', 'nan', 'float', 'anyfloat', 'text', ]\n\n#-----------------------------------------------------------------------------------------------------------\n$type_of = ( x ) ->\n  #.........................................................................................................\n  ### Primitives: ###\n  return 'null'         if x is null\n  return 'undefined'    if x is undefined\n  return 'infinity'     if ( x is +Infinity ) or ( x is -Infinity )\n  return 'boolean'      if ( x is true ) or ( x is false )\n  return 'nan'          if Number.isNaN     x\n  return 'float'        if Number.isFinite  x\n  #.........................................................................................................\n  switch jstypeof = typeof x\n    when 'string'                       then return 'text'\n  #.........................................................................................................\n  return 'list'         if Array.isArray  x\n  millertype = Object::toString.call x\n  return ( millertype.replace /^\\[object ([^\\]]+)\\]$/, '$1' ).toLowerCase()\n  # switch millertype = Object::toString.call x\n  #   when '[object Function]'            then return 'function'\n  #   when '[object AsyncFunction]'       then return 'asyncfunction'\n  #   when '[object GeneratorFunction]'   then return 'generatorfunction'\n  #.........................................................................................................\n  # return millertype[ 8 ... millertype.length - 1 ].toLowerCase()\n  # return 'something'\n\n\n#===========================================================================================================\nclass Intertype\n\n  #---------------------------------------------------------------------------------------------------------\n  @primitive_types = $primitive_types\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    hide @, 'isa',        @isa.bind       @\n    hide @, 'validate',   @validate.bind  @\n    hide @, 'create',     @create.bind    @\n    hide @, 'type_of',    @type_of.bind   @\n    hide @, 'types_of',   @types_of.bind  @\n    hide @, 'memo',       new Map()\n    hide @, '_recording', false\n    hide @, '_journal',   null\n    hide @, '_stack',     null\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  isa: ( type, x ) ->\n    ### TAINT use proper validation ###\n    unless type instanceof Type\n      throw new Error \"Î©___1 expected an instance of `Type`, got a #{$type_of R}\"\n    #.......................................................................................................\n    if @_recording\n      @_stack.push type.$typename\n      @_journal.push entry = {}\n    #.......................................................................................................\n    unless ( R = type.isa.call type, x, @ ) in [ true, false, ]\n      throw new Error \"Î©___2 expected `true` or `false`, got a #{$type_of R}\"\n    #.......................................................................................................\n    if @_recording\n      stack = @_stack.join '.'\n      @_stack.pop()\n      Object.assign entry, { type: type.$typename, stack, value: x, verdict: R, }\n    #.......................................................................................................\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  @type_of: $type_of\n  type_of:  $type_of\n\n  #---------------------------------------------------------------------------------------------------------\n  types_of: ( typespace, x ) ->\n    unless typespace instanceof Typespace\n      throw new Error \"Î©___1 expected an instance of Typespace, got a #{$type_of x}\"\n    return ( typename for typename, type of typespace when @isa type, x )\n\n\n  #---------------------------------------------------------------------------------------------------------\n  validate: ( type, x ) ->\n    return x if @isa type, x\n    throw new Error \"Î©___3 expected a #{type.$typename}, got a #{$type_of x}\"\n\n  #---------------------------------------------------------------------------------------------------------\n  create: ( type, P... ) ->\n    throw new Error \"Î©___4 not yet implemented\"\n\n  #---------------------------------------------------------------------------------------------------------\n  evaluate: ( type, x ) ->\n    @_recording = true\n    @_journal   = []\n    @_stack     = []\n    #.......................................................................................................\n    @isa type, x\n    #.......................................................................................................\n    R           = @_journal\n    @_recording = false\n    @_journal   = null\n    @_stack     = null\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  copy: ( x ) ->\n\n  #---------------------------------------------------------------------------------------------------------\n  equals: ( a, b ) ->\n    throw new Error \"Î©___5 not yet implemented\"\n\n\n#===========================================================================================================\nclass Type\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( typespace, typename, declaration ) ->\n    @$typename = typename # hide @, '$typename',  typename\n    hide @, '$typespace', typespace\n    @_compile_fields typespace, typename, declaration if declaration.fields?\n    #.......................................................................................................\n    switch true\n      #.....................................................................................................\n      when $isa.text declaration\n        declaration = do ( typeref = declaration ) => { isa: ( ( x, t ) -> t.isa @$typespace[ typeref ], x ), }\n      #.....................................................................................................\n      when $isa.function declaration\n        declaration = { isa: declaration, }\n      #.....................................................................................................\n      when declaration instanceof Type    then null\n      when declaration instanceof Object  then null\n      #.....................................................................................................\n      else\n        throw new Error \"Î©___6 expected a typename, a function or a type as declaration, got a #{$type_of declaration}\"\n    #.......................................................................................................\n    ### TAINT this is defective w/out proper validation ###\n    for key, value of declaration\n      nameit typename, value if key is 'isa' # check that value is function?\n      hide @, key, value\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _compile_fields: ( typespace, typename, declaration ) ->\n    #.......................................................................................................\n    ### TAINT try to move this check to validation step ###\n    if declaration.isa?\n      throw new Error \"Î©___7 must have exactly one of `isa` or `fields`, not both\"\n    for field_name, field_declaration of declaration.fields\n      declaration.fields[ field_name ] = new Type typespace, field_name, field_declaration\n    #.......................................................................................................\n    declaration.isa = @_get_default_isa_for_fields typespace, typename, declaration\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  _get_default_isa_for_fields: ( typespace, typename, declaration ) -> ( x, t ) ->\n    for field_name, field of @fields\n      return false unless x? and t.isa field, x[ field_name ]\n    return true\n\n\n#===========================================================================================================\nclass Typespace\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( typespace_cfg ) ->\n    for typename, declaration of typespace_cfg\n      declaration   = new Type @, typename, declaration unless declaration instanceof Type\n      @[ typename ] = declaration\n    return undefined\n\n\n#===========================================================================================================\n# if module is require.main then await do =>\ndo =>\n  types = new Intertype()\n  module.exports = { Intertype, Type, Typespace, types, }\n"
  ]
}