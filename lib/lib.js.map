{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/lib.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ debug\n  info\n  warn }                  = GUY.trm.get_loggers 'demo-execa'\n{ rpr }                   = GUY.trm\n{ hide }                  = GUY.props\n{ props: {\n    nameit } }            = require 'webguy'\nB                         = require './builtins'\nH                         = require './helpers'\n\n\n#===========================================================================================================\nclass Intertype\n\n  # #---------------------------------------------------------------------------------------------------------\n  # @primitive_types = B.primitive_types\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    hide @, 'isa',        @isa.bind       @\n    hide @, 'validate',   @validate.bind  @\n    hide @, 'create',     @create.bind    @\n    hide @, 'type_of',    @type_of.bind   @\n    hide @, 'types_of',   @types_of.bind  @\n    hide @, 'memo',       new Map()\n    hide @, '_recording', false\n    hide @, '_journal',   null\n    hide @, '_stack',     null\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  isa: ( type, x ) ->\n    ### TAINT use proper validation ###\n    unless type instanceof Type\n      throw new Error \"Ω___1 expected an instance of `Type`, got a #{B.type_of R}\"\n    #.......................................................................................................\n    if @_recording\n      @_stack.push type.$typename\n      @_journal.push entry = {}\n    #.......................................................................................................\n    unless ( R = type.isa.call type, x, @ ) in [ true, false, ]\n      throw new Error \"Ω___2 expected `true` or `false`, got a #{B.type_of R}\"\n    #.......................................................................................................\n    if @_recording\n      stack = @_stack.join '/'\n      @_stack.pop()\n      Object.assign entry, { type: type.$typename, stack, value: x, verdict: R, }\n    #.......................................................................................................\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  @type_of: B.type_of\n  type_of:  B.type_of\n\n  #---------------------------------------------------------------------------------------------------------\n  types_of: ( typespace, x ) ->\n    unless typespace instanceof Typespace\n      throw new Error \"Ω___3 expected an instance of Typespace, got a #{B.type_of x}\"\n    return ( typename for typename, type of typespace when @isa type, x )\n\n  #---------------------------------------------------------------------------------------------------------\n  validate: ( type, x ) ->\n    return x if @isa type, x\n    throw new Error \"Ω___4 expected a #{type.$typename}, got a #{B.type_of x}\"\n\n  #---------------------------------------------------------------------------------------------------------\n  evaluate: ( type, x ) ->\n    @_recording = true\n    @_journal   = []\n    @_stack     = []\n    #.......................................................................................................\n    @isa type, x\n    #.......................................................................................................\n    R           = @_journal\n    @_recording = false\n    @_journal   = null\n    @_stack     = null\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  equals: ( a, b ) ->\n    throw new Error \"Ω___5 not yet implemented\"\n\n  #---------------------------------------------------------------------------------------------------------\n  create: ( type, P... ) ->\n    unless type instanceof Type\n      throw new Error \"Ω___6 expected an instance of Type, got a #{B.type_of type}\"\n    return type.create.call type, P, @\n\n  # #---------------------------------------------------------------------------------------------------------\n  # copy_template: ( type ) ->\n  #   return x if B.isa.primitive x\n  #   return x.call\n\n\n#===========================================================================================================\nclass Type\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( typespace, typename, declaration ) ->\n    @$typename = typename\n    hide @, '$typespace',     typespace\n    hide @, '$members',       {}\n    hide @, '$member_names',  []\n    hide @, '$has_members',   false\n    hide @, '$kind',          null\n    #.......................................................................................................\n    declaration = @_declaration_as_pod  typespace, typename, declaration\n    @_compile_declaration_members       typespace, typename, declaration\n    # @_compile_declaration_fields        typespace, typename, declaration\n    @_compile_declaration_$kind         typespace, typename, declaration\n    return undefined\n\n    @_compile_declaration_$isa          typespace, typename, declaration\n    @_compile_declaration_$freeze       typespace, typename, declaration\n    @_compile_declaration_$create       typespace, typename, declaration\n    #.......................................................................................................\n    for key, value of declaration\n      ### TAINT check for overrides ###\n      hide @, key, value\n    #.......................................................................................................\n    ### TAINT perform validation of resulting shape here ###\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _declaration_as_pod: ( typespace, typename, declaration ) ->\n    return ( do ( $isa = declaration ) -> { $isa, } ) unless B.isa.pod declaration\n    return declaration\n\n  #---------------------------------------------------------------------------------------------------------\n  _compile_declaration_members: ( typespace, typename, declaration ) ->\n    # debug 'Ω___7', typename, declaration\n    # debug 'Ω___8', H.get_own_user_keys declaration\n    for name in H.get_own_user_keys declaration\n      @$members[ name ] = declaration[ name ]\n      @$member_names.push name\n    @$has_members = @$member_names.length > 0\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  _compile_declaration_$kind: ( typespace, typename, declaration ) ->\n    if declaration.$kind?\n      if @$has_members\n        unless declaration.$kind in [ '$record', '$variant', ]\n          throw new Error \"Ω___9 expected $kind to be '$record' or '$variant', got #{rpr declaration.$kind}\"\n        @$kind = declaration.$kind\n      else if B.isa.list declaration.$isa\n        unless declaration.$kind is '$enumeration'\n          throw new Error \"Ω__10 expected $kind to be '$enumeration', got #{rpr declaration.$kind}\"\n      @$kind = declaration.$kind\n    #.......................................................................................................\n    else\n      if @$has_members\n        @$kind = '$record'\n      else if B.isa.list declaration.$isa\n          @$kind = '$enumeration'\n      @$kind ?= '$unspecified'\n    #.......................................................................................................\n    unless B.isa.declaration_$kind @$kind\n      throw new Error \"Ω__11 unexpected value of `$kind`: #{rpr @$kind}\"\n    return declaration\n\n  #---------------------------------------------------------------------------------------------------------\n  _compile_declaration_$freeze: ( typespace, typename, declaration ) ->\n    return declaration\n\n  #---------------------------------------------------------------------------------------------------------\n  _compile_declaration_$isa: ( typespace, typename, declaration ) ->\n    if declaration.fields? then @_compile_isa_with_record_fields     typespace, typename, declaration\n    else                        @_compile_isa_without_fields  typespace, typename, declaration\n    nameit typename, declaration.isa\n    return declaration\n\n  #---------------------------------------------------------------------------------------------------------\n  _compile_isa_with_variant_fields: ( typespace, typename, declaration ) ->\n\n  #---------------------------------------------------------------------------------------------------------\n  _compile_isa_with_record_fields: ( typespace, typename, declaration ) ->\n    return null if B.isa.function declaration.isa\n    check_fields = @_get_fields_check typespace, typename, declaration\n    switch true\n      #.....................................................................................................\n      when B.isa.type declaration.isa\n        declaration.isa = do ( type = declaration.isa ) => ( x, t ) ->\n          ( t.isa type, x ) and ( check_fields.call @, x, t )\n      #.....................................................................................................\n      ### (see condition dB in README) ###\n      when B.isa.nonempty_text declaration.isa\n        declaration.isa = do ( typeref = declaration.isa ) =>\n          unless B.isa.type ( type = typespace[ typeref ] )\n            throw new Error \"Ω__12 declaration for type #{rpr typename} contains forward reference to type #{rpr typeref}\"\n          return ( x, t ) -> ( t.isa type, x ) and ( check_fields.call @, x, t )\n      #.....................................................................................................\n      when not declaration.isa?\n        declaration.isa = check_fields\n      #.....................................................................................................\n      else\n        throw new Error \"Ω__13 expected `declaration.isa` to be a function, a type or a typeref, got a #{B.type_of declaration.isa}\"\n    return declaration\n\n  #---------------------------------------------------------------------------------------------------------\n  _compile_isa_without_fields: ( typespace, typename, declaration ) ->\n    return null if B.isa.function declaration.isa\n    switch true\n      #.....................................................................................................\n      when B.isa.type declaration.isa\n        declaration.isa = do ( type = declaration.isa ) => ( x, t ) -> t.isa type, x\n      #.....................................................................................................\n      when B.isa.nonempty_text declaration.isa\n        declaration.isa = do ( typeref = declaration.isa ) =>\n          unless B.isa.type ( type = typespace[ typeref ] )\n            throw new Error \"Ω__14 declaration for type #{rpr typename} contains forward reference to type #{rpr typeref}\"\n          return ( x, t ) -> t.isa type, x\n      #.....................................................................................................\n      when not declaration.isa?\n        declaration.isa = ( x, t ) -> B.isa.pod x\n      #.....................................................................................................\n      else\n        throw new Error \"Ω__15 expected `declaration.isa` to be a function, a type or a typeref, got a #{B.type_of declaration.isa}\"\n    return null\n\n  # #---------------------------------------------------------------------------------------------------------\n  # _compile_declaration_fields: ( typespace, typename, declaration ) ->\n  #   return declaration unless declaration.fields?\n  #   unless B.isa.pod declaration.fields\n  #     throw new Error \"Ω__16 expected `fields` to be a POD, got a #{B.type_of declaration.fields}\"\n  #   #.......................................................................................................\n  #   for field_name, field_declaration of declaration.fields\n  #     ### TAINT use API method ###\n  #     field_typename = \"#{typename}_$#{field_name}\"\n  #     declaration.fields[ field_name ] = \\\n  #       typespace[ field_typename ] = new Type typespace, field_typename, field_declaration\n  #   #.......................................................................................................\n  #   declaration.isa = @_get_fields_check typespace, typename, declaration\n  #   return declaration\n\n  #---------------------------------------------------------------------------------------------------------\n  _get_fields_check: ( typespace, typename, declaration ) ->\n    return ( x, t ) ->\n      for field_name, field_type of @fields\n        return false unless x? and t.isa field_type, x[ field_name ]\n      return true\n\n  #---------------------------------------------------------------------------------------------------------\n  _compile_declaration_$create: ( typespace, typename, declaration ) ->\n    has_fields      = declaration.fields?\n    fields_isa_pod  = B.isa.pod declaration.fields\n    #.......................................................................................................\n    ### condition cC ###\n    if has_fields and not fields_isa_pod\n      throw new Error \"Ω__17 (see condition cC in README)\"\n    #.......................................................................................................\n    if declaration.create?\n      ### condition cB ###\n      unless B.isa.function declaration.create\n        throw new Error \"Ω__18 (see condition cB in README)\"\n      ### condition cA: use user-defined `create()` method, nothing to do here: ###\n      return null\n    #.......................................................................................................\n    unless has_fields\n      ### condition cI ###\n      unless declaration.template?\n        declaration.create = ( P, t ) ->\n          throw new Error \"Ω__19 type #{rpr typename} does not support value creation (see condition cI in README)\"\n        return null\n      ### condition cG ###\n      if B.isa.function declaration.template\n        declaration.create = do ( create = declaration.template ) => ( P, t ) -> create.call @, P, t\n        return null\n      ### condition cH ###\n      declaration.create = do ( seed_value = declaration.template ) => ( P, t ) ->\n        unless P.length is 0\n          throw new Error \"Ω__20 create method for #{typename} does not accept arguments, got #{P.length} (see condition cH in README)\"\n        return seed_value\n      return null\n    #.......................................................................................................\n    template_isa_pod = B.isa.pod declaration.template\n    if declaration.template?\n      ### condition cE ###\n      unless template_isa_pod\n        throw new Error \"Ω__21 (see condition cE in README)\"\n      ### condition cD ###\n      # do ( fields = declaration.fields, template = declaration.template ) =>\n      declaration.create = ( P, t ) ->\n        unless P.length is 0\n          throw new Error \"Ω__22 create method for #{typename} does not accept arguments, got #{P.length} (see condition cD in README)\"\n        R = {}\n        for field_name, type of @fields\n          ### condition cDa ###\n          if ( seed = @template[ field_name ] )?\n            R[ field_name ] = if ( B.isa.function seed ) then ( seed.call @, P..., t ) else seed\n          else\n            R[ field_name ] = t.create type\n        return R\n      return null\n    #.......................................................................................................\n    ### condition cF ###\n    declaration.create = ( P, t ) ->\n      unless P.length is 0\n        throw new Error \"Ω__23 create method for #{typename} does not accept arguments, got #{P.length} (see condition cF in README)\"\n      R               = {}\n      R[ field_name ] = t.create type for field_name, type of @fields\n      return R\n    return null\n\n\n#===========================================================================================================\nclass Typespace\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( typespace_cfg ) ->\n    for typename, declaration of typespace_cfg\n      ### TAINT check for overrides ###\n      declaration   = new Type @, typename, declaration unless declaration instanceof Type\n      @[ typename ] = declaration\n    return undefined\n\n\n# #===========================================================================================================\n# class Typespace extends Type\n\n#   #---------------------------------------------------------------------------------------------------------\n#   constructor: ( declarations ) ->\n#     ### TAINT use proper validation, `create()` ###\n#     unless B.isa.pod declarations\n#       throw new Error \"Ω__24 expected a plain object, got a #{B.type_of declarations}\"\n#     if declarations.$isa? or ( declarations.$isa isnt '$variant' )\n#       throw new Error \"Ω__25 expected declarations.$isa to be unset or set to '$variant', got `{ declarations.$isa: #{rpr declarations.$isa}, }`\"\n#     super { declarations..., $isa: '$variant', }\n#     return undefined\n\n\n#===========================================================================================================\n# if module is require.main then await do =>\ndo =>\n  types = new Intertype()\n  module.exports = { Intertype, Type, Typespace, types, builtins: B, }\n"
  ]
}