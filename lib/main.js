// Generated by CoffeeScript 2.4.1
(function() {
  'use strict';
  var CND, Multimix, alert, assign, badge, debug, declarations, flatten, get_rprs_of_tprs, help, info, isa, jr, js_type_of, rpr, urge, validate, warn, whisper, xrpr;

  //###########################################################################################################
  CND = require('cnd');

  rpr = CND.rpr;

  badge = 'INTERTYPE/MAIN';

  debug = CND.get_logger('debug', badge);

  alert = CND.get_logger('alert', badge);

  whisper = CND.get_logger('whisper', badge);

  warn = CND.get_logger('warn', badge);

  help = CND.get_logger('help', badge);

  urge = CND.get_logger('urge', badge);

  info = CND.get_logger('info', badge);

  //...........................................................................................................
  Multimix = require('multimix');

  //...........................................................................................................
  ({assign, jr, flatten, xrpr, get_rprs_of_tprs, js_type_of} = require('./helpers'));

  //...........................................................................................................
  declarations = require('./declarations');

  //-----------------------------------------------------------------------------------------------------------
  isa = function(type, ...xP) {
    return this._satisfies_all_aspects(type, ...xP);
  };

  //-----------------------------------------------------------------------------------------------------------
  validate = function(type, ...xP) {
    var P, aspect, message, rpr_of_tprs, srpr_of_tprs, x;
    if ((aspect = this._get_unsatisfied_aspect(type, ...xP)) == null) {
      return true;
    }
    [x, ...P] = xP;
    ({rpr_of_tprs, srpr_of_tprs} = get_rprs_of_tprs(P));
    message = aspect === 'main' ? `µ3093 not a valid ${type}: ${xrpr(x)}${srpr_of_tprs}` : `µ3093 not a valid ${type} (violates ${rpr(aspect)}): ${xrpr(x)}${srpr_of_tprs}`;
    throw new Error(message);
  };

  //===========================================================================================================
  this.Intertype = (function() {
    class Intertype extends Multimix {
      //---------------------------------------------------------------------------------------------------------
      constructor(target = null) {
        super();
        this.specs = {};
        this.isa = Multimix.get_keymethod_proxy(this, isa);
        this.validate = Multimix.get_keymethod_proxy(this, validate);
        declarations.declare_types.apply(this);
        if (target != null) {
          this.export(target);
        }
      }

    };

    // @extend   object_with_class_properties
    Intertype.include(require('./cataloguing'));

    Intertype.include(require('./sizing'));

    Intertype.include(require('./declaring'));

    return Intertype;

  }).call(this);

}).call(this);

//# sourceMappingURL=main.js.map
